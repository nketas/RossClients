!SESSION 2008-03-22 09:18:13.192 -----------------------------------------------
eclipse.buildId=M20071023-1652
java.version=1.5.0_13
java.vendor=Apple Computer, Inc.
BootLoader constants: OS=macosx, ARCH=x86, WS=carbon, NL=en_US
Framework arguments:  -keyring /Users/Andy/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws carbon -arch x86 -keyring /Users/Andy/.eclipse_keyring -consoleLog -showlocation

!ENTRY org.eclipse.core.resources 2 10035 2008-03-22 09:18:31.187
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.core.resources 4 567 2008-03-22 09:18:31.228
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2008-03-22 09:18:31.229
!MESSAGE Could not read metadata for 'XMLExamples'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException: The project description file (.project) for 'XMLExamples' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:660)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:792)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:772)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:663)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1319)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:1949)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:1713)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:363)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:999)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:993)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:974)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:346)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:260)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:400)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:111)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:417)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:189)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:340)
	at org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass(SingleSourcePackage.java:37)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(BundleLoader.java:405)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:369)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:357)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:107)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:169)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2008-03-22 09:18:31.237
!MESSAGE The project description file (.project) for 'XMLExamples' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:21:18.548
!MESSAGE NLS unused message: pluginName in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:21:18.548
!MESSAGE NLS unused message: pluginProvider in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:21:18.560
!MESSAGE NLS unused message: _WARN_INVALID_JAVA_PACKAGE in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:21:18.576
!MESSAGE NLS unused message: ExampleProjectCreationWizard.title in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:21:18.577
!MESSAGE NLS unused message: ExampleProjectCreationWizard.op_error.title in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:21:18.578
!MESSAGE NLS unused message: ExampleProjectCreationWizard.op_error.message in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:21:18.578
!MESSAGE NLS unused message: ExampleProjectCreationWizard.overwritequery.title in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:21:18.579
!MESSAGE NLS unused message: ExampleProjectCreationWizard.overwritequery.message in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:21:18.580
!MESSAGE NLS unused message: ExampleProjectCreationOperation.op_desc in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:21:18.580
!MESSAGE NLS unused message: ExampleProjectCreationOperation.op_desc_proj in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:21:18.581
!MESSAGE NLS unused message: ExampleProjectCreationWizardPage.error.alreadyexists in: plugin
!SESSION 2008-03-22 09:24:42.677 -----------------------------------------------
eclipse.buildId=M20071023-1652
java.version=1.5.0_13
java.vendor=Apple Computer, Inc.
BootLoader constants: OS=macosx, ARCH=x86, WS=carbon, NL=en_US
Framework arguments:  -keyring /Users/Andy/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws carbon -arch x86 -keyring /Users/Andy/.eclipse_keyring -consoleLog -showlocation

!ENTRY org.eclipse.core.resources 2 10035 2008-03-22 09:24:50.751
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.core.resources 4 567 2008-03-22 09:24:50.818
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2008-03-22 09:24:50.818
!MESSAGE Could not read metadata for 'XML Test'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException: The project description file (.project) for 'XML Test' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:660)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:792)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:772)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:663)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1319)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:1949)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:1713)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:363)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:999)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:993)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:974)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:346)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:260)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:400)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:111)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:417)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:189)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:340)
	at org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass(SingleSourcePackage.java:37)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(BundleLoader.java:405)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:369)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:357)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:107)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:169)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2008-03-22 09:24:50.826
!MESSAGE The project description file (.project) for 'XML Test' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:26:25.665
!MESSAGE NLS unused message: pluginName in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:26:25.665
!MESSAGE NLS unused message: pluginProvider in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:26:25.756
!MESSAGE NLS unused message: _WARN_INVALID_JAVA_PACKAGE in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:26:25.771
!MESSAGE NLS unused message: ExampleProjectCreationWizard.title in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:26:25.772
!MESSAGE NLS unused message: ExampleProjectCreationWizard.op_error.title in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:26:25.773
!MESSAGE NLS unused message: ExampleProjectCreationWizard.op_error.message in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:26:25.774
!MESSAGE NLS unused message: ExampleProjectCreationWizard.overwritequery.title in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:26:25.774
!MESSAGE NLS unused message: ExampleProjectCreationWizard.overwritequery.message in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:26:25.775
!MESSAGE NLS unused message: ExampleProjectCreationOperation.op_desc in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:26:25.776
!MESSAGE NLS unused message: ExampleProjectCreationOperation.op_desc_proj in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:26:25.776
!MESSAGE NLS unused message: ExampleProjectCreationWizardPage.error.alreadyexists in: plugin
!SESSION 2008-03-22 09:29:47.947 -----------------------------------------------
eclipse.buildId=M20071023-1652
java.version=1.5.0_13
java.vendor=Apple Computer, Inc.
BootLoader constants: OS=macosx, ARCH=x86, WS=carbon, NL=en_US
Framework arguments:  -keyring /Users/Andy/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws carbon -arch x86 -keyring /Users/Andy/.eclipse_keyring -consoleLog -showlocation

!ENTRY org.eclipse.core.resources 4 567 2008-03-22 09:29:51.951
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2008-03-22 09:29:51.951
!MESSAGE Could not read metadata for 'test'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException: The project description file (.project) for 'test' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:660)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:792)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:772)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:663)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1319)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:1949)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:1713)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:363)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:999)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:993)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:974)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:346)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:260)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:400)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:111)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:417)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:189)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:340)
	at org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass(SingleSourcePackage.java:37)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(BundleLoader.java:405)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:369)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:357)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:107)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:169)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2008-03-22 09:29:51.984
!MESSAGE The project description file (.project) for 'test' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:32:17.503
!MESSAGE NLS unused message: pluginName in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:32:17.504
!MESSAGE NLS unused message: pluginProvider in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:32:17.521
!MESSAGE NLS unused message: _WARN_INVALID_JAVA_PACKAGE in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:32:17.536
!MESSAGE NLS unused message: ExampleProjectCreationWizard.title in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:32:17.536
!MESSAGE NLS unused message: ExampleProjectCreationWizard.op_error.title in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:32:17.537
!MESSAGE NLS unused message: ExampleProjectCreationWizard.op_error.message in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:32:17.538
!MESSAGE NLS unused message: ExampleProjectCreationWizard.overwritequery.title in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:32:17.539
!MESSAGE NLS unused message: ExampleProjectCreationWizard.overwritequery.message in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:32:17.540
!MESSAGE NLS unused message: ExampleProjectCreationOperation.op_desc in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:32:17.541
!MESSAGE NLS unused message: ExampleProjectCreationOperation.op_desc_proj in: plugin

!ENTRY org.eclipse.osgi 2 1 2008-03-22 09:32:17.542
!MESSAGE NLS unused message: ExampleProjectCreationWizardPage.error.alreadyexists in: plugin
!SESSION 2008-03-22 18:14:08.176 -----------------------------------------------
eclipse.buildId=M20071023-1652
java.version=1.5.0_13
java.vendor=Apple Computer, Inc.
BootLoader constants: OS=macosx, ARCH=x86, WS=carbon, NL=en_US
Framework arguments:  -keyring /Users/Andy/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws carbon -arch x86 -keyring /Users/Andy/.eclipse_keyring -consoleLog -showlocation

!ENTRY org.eclipse.ui.workbench 4 0 2008-03-22 18:16:51.094
!MESSAGE WARNING: Prevented recursive attempt to activate part org.eclipse.jdt.ui.PackageExplorer while still in the middle of activating part org.eclipse.jdt.ui.CompilationUnitEditor
!STACK 0
java.lang.RuntimeException: WARNING: Prevented recursive attempt to activate part org.eclipse.jdt.ui.PackageExplorer while still in the middle of activating part org.eclipse.jdt.ui.CompilationUnitEditor
	at org.eclipse.ui.internal.WorkbenchPage.setActivePart(WorkbenchPage.java:3352)
	at org.eclipse.ui.internal.WorkbenchPage.requestActivation(WorkbenchPage.java:2946)
	at org.eclipse.ui.internal.PartPane.requestActivation(PartPane.java:265)
	at org.eclipse.ui.internal.PartPane.handleEvent(PartPane.java:229)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1495)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1519)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1500)
	at org.eclipse.swt.widgets.Shell.setActiveControl(Shell.java:1282)
	at org.eclipse.swt.widgets.Control.sendFocusEvent(Control.java:2672)
	at org.eclipse.swt.widgets.Control.forceFocus(Control.java:981)
	at org.eclipse.swt.widgets.Decorations.restoreFocus(Decorations.java:412)
	at org.eclipse.swt.widgets.Shell.kEventWindowActivated(Shell.java:902)
	at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1961)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4004)
	at org.eclipse.swt.internal.carbon.OS.DisposeWindow(Native Method)
	at org.eclipse.swt.widgets.Shell.destroyWidget(Shell.java:582)
	at org.eclipse.swt.widgets.Widget.release(Widget.java:1375)
	at org.eclipse.swt.widgets.Widget.dispose(Widget.java:661)
	at org.eclipse.jface.window.Window.close(Window.java:330)
	at org.eclipse.jface.dialogs.Dialog.close(Dialog.java:971)
	at org.eclipse.jface.dialogs.MessageDialog.buttonPressed(MessageDialog.java:167)
	at org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:616)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:227)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1495)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1519)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1504)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1295)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3350)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2954)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:820)
	at org.eclipse.jface.window.Window.open(Window.java:796)
	at org.eclipse.jface.dialogs.MessageDialog.openQuestion(MessageDialog.java:371)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handleEditorInputChanged(AbstractTextEditor.java:4425)
	at org.eclipse.ui.texteditor.StatusTextEditor.handleEditorInputChanged(StatusTextEditor.java:220)
	at org.eclipse.ui.texteditor.AbstractTextEditor.sanityCheckState(AbstractTextEditor.java:4555)
	at org.eclipse.ui.texteditor.StatusTextEditor.sanityCheckState(StatusTextEditor.java:210)
	at org.eclipse.ui.texteditor.AbstractTextEditor.safelySanityCheckState(AbstractTextEditor.java:4533)
	at org.eclipse.ui.texteditor.AbstractTextEditor$ActivationListener.handleActivation(AbstractTextEditor.java:921)
	at org.eclipse.ui.texteditor.AbstractTextEditor$ActivationListener.partActivated(AbstractTextEditor.java:879)
	at org.eclipse.ui.internal.PartListenerList$1.run(PartListenerList.java:72)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)
	at org.eclipse.core.runtime.Platform.run(Platform.java:857)
	at org.eclipse.ui.internal.PartListenerList.fireEvent(PartListenerList.java:57)
	at org.eclipse.ui.internal.PartListenerList.firePartActivated(PartListenerList.java:70)
	at org.eclipse.ui.internal.PartService.firePartActivated(PartService.java:73)
	at org.eclipse.ui.internal.PartService.setActivePart(PartService.java:171)
	at org.eclipse.ui.internal.WWinPartService.updateActivePart(WWinPartService.java:124)
	at org.eclipse.ui.internal.WWinPartService.access$0(WWinPartService.java:115)
	at org.eclipse.ui.internal.WWinPartService$1.partDeactivated(WWinPartService.java:48)
	at org.eclipse.ui.internal.PartListenerList2$4.run(PartListenerList2.java:113)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)
	at org.eclipse.core.runtime.Platform.run(Platform.java:857)
	at org.eclipse.ui.internal.PartListenerList2.fireEvent(PartListenerList2.java:53)
	at org.eclipse.ui.internal.PartListenerList2.firePartDeactivated(PartListenerList2.java:111)
	at org.eclipse.ui.internal.PartService.firePartDeactivated(PartService.java:116)
	at org.eclipse.ui.internal.PartService.setActivePart(PartService.java:165)
	at org.eclipse.ui.internal.WorkbenchPagePartList.fireActivePartChanged(WorkbenchPagePartList.java:56)
	at org.eclipse.ui.internal.PartList.setActivePart(PartList.java:126)
	at org.eclipse.ui.internal.WorkbenchPage.setActivePart(WorkbenchPage.java:3402)
	at org.eclipse.ui.internal.WorkbenchPage.activate(WorkbenchPage.java:611)
	at org.eclipse.ui.internal.WorkbenchPage.showEditor(WorkbenchPage.java:2822)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2728)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2651)
	at org.eclipse.ui.internal.WorkbenchPage.access$13(WorkbenchPage.java:2643)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2595)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2590)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2574)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2565)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:299)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:173)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:194)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:175)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:268)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:244)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:316)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$5.open(PackageExplorerPart.java:613)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:820)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)
	at org.eclipse.core.runtime.Platform.run(Platform.java:857)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:46)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:199)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:818)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1079)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1183)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:263)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:257)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:297)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1495)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1519)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1504)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1295)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3350)
	at org.eclipse.swt.widgets.Control.sendTrackEvents(Control.java:2734)
	at org.eclipse.swt.widgets.Control.kEventControlTrack(Control.java:1953)
	at org.eclipse.swt.widgets.Widget.controlProc(Widget.java:367)
	at org.eclipse.swt.widgets.Display.controlProc(Display.java:835)
	at org.eclipse.swt.internal.carbon.OS.CallNextEventHandler(Native Method)
	at org.eclipse.swt.widgets.Tree.kEventMouseDown(Tree.java:2363)
	at org.eclipse.swt.widgets.Widget.mouseProc(Widget.java:1262)
	at org.eclipse.swt.widgets.Display.mouseProc(Display.java:2819)
	at org.eclipse.swt.internal.carbon.OS.SendEventToEventTarget(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2938)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:169)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
!SESSION 2008-03-31 22:29:20.968 -----------------------------------------------
eclipse.buildId=M20071023-1652
java.version=1.5.0_13
java.vendor=Apple Computer, Inc.
BootLoader constants: OS=macosx, ARCH=x86, WS=carbon, NL=en_US
Framework arguments:  -keyring /Users/Andy/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws carbon -arch x86 -keyring /Users/Andy/.eclipse_keyring -consoleLog -showlocation

!ENTRY org.eclipse.debug.core 4 120 2008-04-01 09:38:21.158
!MESSAGE Error logged from Debug Core: 
!STACK 0
java.io.IOException: Bad file descriptor
	at java.io.FileOutputStream.close0(Native Method)
	at java.io.FileOutputStream.close(FileOutputStream.java:279)
	at java.io.FilterOutputStream.close(FilterOutputStream.java:143)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:113)
	at org.eclipse.debug.internal.core.InputStreamMonitor$1.run(InputStreamMonitor.java:84)
	at java.lang.Thread.run(Thread.java:613)
!SESSION 2008-04-01 17:27:22.373 -----------------------------------------------
eclipse.buildId=M20071023-1652
java.version=1.5.0_13
java.vendor=Apple Computer, Inc.
BootLoader constants: OS=macosx, ARCH=x86, WS=carbon, NL=en_US
Framework arguments:  -keyring /Users/Andy/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws carbon -arch x86 -keyring /Users/Andy/.eclipse_keyring -consoleLog -showlocation

!ENTRY org.eclipse.ui 4 4 2008-04-01 21:38:44.260
!MESSAGE Invalid preference page path: Cache
!SESSION 2008-04-03 00:52:02.103 -----------------------------------------------
eclipse.buildId=M20071023-1652
java.version=1.5.0_13
java.vendor=Apple Computer, Inc.
BootLoader constants: OS=macosx, ARCH=x86, WS=carbon, NL=en_US
Framework arguments:  -keyring /Users/Andy/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws carbon -arch x86 -keyring /Users/Andy/.eclipse_keyring -consoleLog -showlocation

!ENTRY org.eclipse.debug.core 4 120 2008-04-03 00:57:05.363
!MESSAGE Error logged from Debug Core: 
!STACK 0
java.io.IOException: Bad file descriptor
	at java.io.FileOutputStream.close0(Native Method)
	at java.io.FileOutputStream.close(FileOutputStream.java:279)
	at java.io.FilterOutputStream.close(FilterOutputStream.java:143)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:113)
	at org.eclipse.debug.internal.core.InputStreamMonitor$1.run(InputStreamMonitor.java:84)
	at java.lang.Thread.run(Thread.java:613)
!SESSION 2008-04-03 23:28:12.464 -----------------------------------------------
eclipse.buildId=M20071023-1652
java.version=1.5.0_13
java.vendor=Apple Computer, Inc.
BootLoader constants: OS=macosx, ARCH=x86, WS=carbon, NL=en_US
Framework arguments:  -keyring /Users/Andy/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws carbon -arch x86 -keyring /Users/Andy/.eclipse_keyring -consoleLog -showlocation

!ENTRY org.eclipse.search 2 0 2008-04-04 16:54:10.681
!MESSAGE Problems encountered during text search.
!SUBENTRY 1 org.eclipse.search 2 2 2008-04-04 16:54:10.682
!MESSAGE File 'ROSS API/.DS_Store' has been skipped, problem while reading: ('Resource is out of sync with the file system: '/ROSS API/.DS_Store'.').
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync with the file system: '/ROSS API/.DS_Store'.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:610)
	at org.eclipse.core.internal.resources.File.getContents(File.java:287)
	at org.eclipse.core.internal.resources.File.getContents(File.java:276)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.getInputStream(FileCharSequenceProvider.java:282)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.initializeReader(FileCharSequenceProvider.java:276)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider$FileCharSequence.reset(FileCharSequenceProvider.java:268)
	at org.eclipse.search.internal.core.text.FileCharSequenceProvider.newCharSequence(FileCharSequenceProvider.java:40)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFile(TextSearchVisitor.java:255)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.processFiles(TextSearchVisitor.java:190)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:171)
	at org.eclipse.search.internal.core.text.TextSearchVisitor.search(TextSearchVisitor.java:183)
	at org.eclipse.search.core.text.TextSearchEngine$1.search(TextSearchEngine.java:54)
	at org.eclipse.search.internal.ui.text.FileSearchQuery.run(FileSearchQuery.java:122)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:94)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
!SUBENTRY 2 org.eclipse.core.resources 4 274 2008-04-04 16:54:10.694
!MESSAGE Resource is out of sync with the file system: '/ROSS API/.DS_Store'.
!SESSION 2008-04-04 18:01:16.935 -----------------------------------------------
eclipse.buildId=M20071023-1652
java.version=1.5.0_13
java.vendor=Apple Computer, Inc.
BootLoader constants: OS=macosx, ARCH=x86, WS=carbon, NL=en_US
Framework arguments:  -keyring /Users/Andy/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws carbon -arch x86 -keyring /Users/Andy/.eclipse_keyring -consoleLog -showlocation

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:17:13.372
!MESSAGE Platform symbolic name cannot be resolved. System architecture: 'i386' and platform: mac os x

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:17:13.402
!MESSAGE Integrated Agent Controller(IAC) was not found. Make sure you have IAC installed.

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:17:41.708
!MESSAGE Platform symbolic name cannot be resolved. System architecture: 'i386' and platform: mac os x

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:17:41.745
!MESSAGE Integrated Agent Controller(IAC) was not found. Make sure you have IAC installed.

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:17:41.755
!MESSAGE Platform symbolic name cannot be resolved. System architecture: 'i386' and platform: mac os x

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:17:41.756
!MESSAGE Integrated Agent Controller(IAC) was not found. Make sure you have IAC installed.

!ENTRY org.eclipse.hyades.trace.ui 4 4 2008-04-04 18:17:41.760
!MESSAGE Agent Controller is unavailable under port 10002.  Make sure that the service is started and the port number is correct under preferences. 
!STACK 1
org.eclipse.core.runtime.CoreException: Agent Controller is unavailable under port 10002.  Make sure that the service is started and the port number is correct under preferences. 
	at org.eclipse.tptp.trace.ui.internal.launcher.core.LauncherUtility.createCoreException(LauncherUtility.java:123)
	at org.eclipse.tptp.platform.jvmti.client.internal.launcher.TIDelegateHelper.connectToAgentController(TIDelegateHelper.java:402)
	at org.eclipse.tptp.platform.jvmti.client.internal.launcher.TIDelegateHelper.launch(TIDelegateHelper.java:310)
	at org.eclipse.tptp.platform.jvmti.client.internal.launcher.TIJavaLauncherDelegate.launch(TIJavaLauncherDelegate.java:37)
	at org.eclipse.tptp.trace.ui.internal.launcher.core.LauncherUtility.delegateInit(LauncherUtility.java:1163)
	at org.eclipse.tptp.trace.ui.provisional.launcher.PrimaryLaunchDelegate.run(PrimaryLaunchDelegate.java:196)
	at java.lang.Thread.run(Thread.java:613)
org.eclipse.core.runtime.CoreException[0]: org.eclipse.tptp.platform.execution.exceptions.AgentControllerUnavailableException: Error: Unable to connect to the Agent Controller.Connection refused
	at org.eclipse.tptp.platform.execution.client.core.internal.NodeImpl.connect(NodeImpl.java:128)
	at org.eclipse.tptp.platform.execution.util.internal.AgentControllerFactory$EstablishConnection.run(AgentControllerFactory.java:126)
	at java.lang.Thread.run(Thread.java:613)
!SUBENTRY 1 org.eclipse.hyades.trace.ui 4 0 2008-04-04 18:17:41.762
!MESSAGE Agent Controller is unavailable under port 10002.  Make sure that the service is started and the port number is correct under preferences. 
!STACK 0
org.eclipse.tptp.platform.execution.exceptions.AgentControllerUnavailableException: Error: Unable to connect to the Agent Controller.Connection refused
	at org.eclipse.tptp.platform.execution.client.core.internal.NodeImpl.connect(NodeImpl.java:128)
	at org.eclipse.tptp.platform.execution.util.internal.AgentControllerFactory$EstablishConnection.run(AgentControllerFactory.java:126)
	at java.lang.Thread.run(Thread.java:613)

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:18:03.290
!MESSAGE Platform symbolic name cannot be resolved. System architecture: 'i386' and platform: mac os x

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:18:03.560
!MESSAGE Integrated Agent Controller(IAC) was not found. Make sure you have IAC installed.

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:18:03.567
!MESSAGE Platform symbolic name cannot be resolved. System architecture: 'i386' and platform: mac os x

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:18:03.568
!MESSAGE Integrated Agent Controller(IAC) was not found. Make sure you have IAC installed.

!ENTRY org.eclipse.hyades.trace.ui 4 4 2008-04-04 18:18:03.570
!MESSAGE Agent Controller is unavailable under port 10002.  Make sure that the service is started and the port number is correct under preferences. 
!STACK 1
org.eclipse.core.runtime.CoreException: Agent Controller is unavailable under port 10002.  Make sure that the service is started and the port number is correct under preferences. 
	at org.eclipse.tptp.trace.ui.internal.launcher.core.LauncherUtility.createCoreException(LauncherUtility.java:123)
	at org.eclipse.tptp.platform.jvmti.client.internal.launcher.TIDelegateHelper.connectToAgentController(TIDelegateHelper.java:402)
	at org.eclipse.tptp.platform.jvmti.client.internal.launcher.TIDelegateHelper.launch(TIDelegateHelper.java:310)
	at org.eclipse.tptp.platform.jvmti.client.internal.launcher.TIJavaLauncherDelegate.launch(TIJavaLauncherDelegate.java:37)
	at org.eclipse.tptp.trace.ui.internal.launcher.core.LauncherUtility.delegateInit(LauncherUtility.java:1163)
	at org.eclipse.tptp.trace.ui.provisional.launcher.PrimaryLaunchDelegate.run(PrimaryLaunchDelegate.java:196)
	at java.lang.Thread.run(Thread.java:613)
org.eclipse.core.runtime.CoreException[0]: org.eclipse.tptp.platform.execution.exceptions.AgentControllerUnavailableException: Error: Unable to connect to the Agent Controller.Connection refused
	at org.eclipse.tptp.platform.execution.client.core.internal.NodeImpl.connect(NodeImpl.java:128)
	at org.eclipse.tptp.platform.execution.util.internal.AgentControllerFactory$EstablishConnection.run(AgentControllerFactory.java:126)
	at java.lang.Thread.run(Thread.java:613)
!SUBENTRY 1 org.eclipse.hyades.trace.ui 4 0 2008-04-04 18:18:03.571
!MESSAGE Agent Controller is unavailable under port 10002.  Make sure that the service is started and the port number is correct under preferences. 
!STACK 0
org.eclipse.tptp.platform.execution.exceptions.AgentControllerUnavailableException: Error: Unable to connect to the Agent Controller.Connection refused
	at org.eclipse.tptp.platform.execution.client.core.internal.NodeImpl.connect(NodeImpl.java:128)
	at org.eclipse.tptp.platform.execution.util.internal.AgentControllerFactory$EstablishConnection.run(AgentControllerFactory.java:126)
	at java.lang.Thread.run(Thread.java:613)

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:18:28.124
!MESSAGE Platform symbolic name cannot be resolved. System architecture: 'i386' and platform: mac os x

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:18:28.402
!MESSAGE Integrated Agent Controller(IAC) was not found. Make sure you have IAC installed.

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:19:43.137
!MESSAGE Platform symbolic name cannot be resolved. System architecture: 'i386' and platform: mac os x

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:19:43.161
!MESSAGE Integrated Agent Controller(IAC) was not found. Make sure you have IAC installed.

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:20:58.151
!MESSAGE Platform symbolic name cannot be resolved. System architecture: 'i386' and platform: mac os x

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:20:58.181
!MESSAGE Integrated Agent Controller(IAC) was not found. Make sure you have IAC installed.

!ENTRY org.eclipse.hyades.trace.ui 4 4 2008-04-04 18:21:12.989
!MESSAGE 
!STACK 1
org.eclipse.core.runtime.CoreException: 
	at org.eclipse.tptp.trace.ui.provisional.launcher.AbstractProcessLauncher.configureProcess(AbstractProcessLauncher.java:196)
	at org.eclipse.tptp.trace.ui.provisional.launcher.PrimaryLaunchDelegate.run(PrimaryLaunchDelegate.java:252)
	at java.lang.Thread.run(Thread.java:613)
!SUBENTRY 1 org.eclipse.hyades.trace.ui 4 4 2008-04-04 18:21:12.990
!MESSAGE 

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:22:13.166
!MESSAGE Platform symbolic name cannot be resolved. System architecture: 'i386' and platform: mac os x

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:22:13.167
!MESSAGE Integrated Agent Controller(IAC) was not found. Make sure you have IAC installed.

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:23:28.181
!MESSAGE Platform symbolic name cannot be resolved. System architecture: 'i386' and platform: mac os x

!ENTRY org.eclipse.tptp.platform.iac.administrator 4 0 2008-04-04 18:23:28.195
!MESSAGE Integrated Agent Controller(IAC) was not found. Make sure you have IAC installed.

!ENTRY org.eclipse.hyades.trace.ui 4 4 2008-04-04 18:23:32.155
!MESSAGE 
!STACK 1
org.eclipse.core.runtime.CoreException: 
	at org.eclipse.tptp.trace.ui.provisional.launcher.AbstractProcessLauncher.configureProcess(AbstractProcessLauncher.java:196)
	at org.eclipse.tptp.trace.ui.provisional.launcher.PrimaryLaunchDelegate.run(PrimaryLaunchDelegate.java:252)
	at java.lang.Thread.run(Thread.java:613)
!SUBENTRY 1 org.eclipse.hyades.trace.ui 4 4 2008-04-04 18:23:32.156
!MESSAGE 
!SESSION 2008-04-10 13:56:56.898 -----------------------------------------------
eclipse.buildId=M20071023-1652
java.version=1.5.0_13
java.vendor=Apple Computer, Inc.
BootLoader constants: OS=macosx, ARCH=x86, WS=carbon, NL=en_US
Framework arguments:  -keyring /Users/Andy/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws carbon -arch x86 -keyring /Users/Andy/.eclipse_keyring -consoleLog -showlocation

!ENTRY org.eclipse.osgi 2 0 2008-04-10 13:57:35.952
!MESSAGE While loading class "org.eclipse.mylyn.tasks.ui.TasksUiPlugin", thread "Thread[main,6,main]" timed out waiting (5000ms) for thread "Thread[Worker-1,5,main]" to finish starting bundle "update@plugins/org.eclipse.mylyn.tasks.ui_2.1.0.v20070927-0900.jar [104]". To avoid deadlock, thread "Thread[main,6,main]" is proceeding but "org.eclipse.mylyn.tasks.ui.TasksUiPlugin" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: State change in progress for bundle "update@plugins/org.eclipse.mylyn.tasks.ui_2.1.0.v20070927-0900.jar" by thread "Worker-1".
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.beginStateChange(AbstractBundle.java:1141)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:258)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:400)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:111)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:417)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:189)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:340)
	at org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass(SingleSourcePackage.java:37)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(BundleLoader.java:405)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:369)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:357)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
	at org.eclipse.mylyn.context.ui.ContextUiPlugin$5.run(ContextUiPlugin.java:258)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3214)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2958)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:169)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
Caused by: org.eclipse.osgi.framework.internal.core.AbstractBundle$BundleStatusException
	... 39 more
Root exception:
org.eclipse.osgi.framework.internal.core.AbstractBundle$BundleStatusException
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.beginStateChange(AbstractBundle.java:1141)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:258)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:400)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:111)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:417)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:189)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:340)
	at org.eclipse.osgi.framework.internal.core.SingleSourcePackage.loadClass(SingleSourcePackage.java:37)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClassInternal(BundleLoader.java:405)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:369)
	at org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:357)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:83)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
	at org.eclipse.mylyn.context.ui.ContextUiPlugin$5.run(ContextUiPlugin.java:258)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3214)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2958)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:169)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
!SESSION 2010-03-12 17:22:53.703 -----------------------------------------------
eclipse.buildId=M20090917-0800
java.version=1.6.0_17
java.vendor=Apple Inc.
BootLoader constants: OS=macosx, ARCH=x86, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/andywu/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86 -product org.eclipse.epp.package.java.product -keyring /Users/andywu/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2010-03-12 17:24:30.788
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
!SESSION 2010-03-14 19:32:40.834 -----------------------------------------------
eclipse.buildId=M20090917-0800
java.version=1.6.0_18
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY com.google.gdt.eclipse.suite 1 0 2010-03-14 19:33:08.506
!MESSAGE Registering: com.google.appengine.eclipse.sdkbundle_1.2.6.v200910131704

!ENTRY com.google.gdt.eclipse.suite 1 0 2010-03-14 19:33:09.073
!MESSAGE Registering: com.google.gwt.eclipse.sdkbundle.win32_1.7.1.v200909221731

!ENTRY org.eclipse.ui 4 0 2010-03-14 19:33:10.374
!MESSAGE Unable to create editor ID org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart: No editor descriptor for id org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart
!STACK 1
org.eclipse.ui.PartInitException: No editor descriptor for id org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:598)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:462)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.EditorAreaHelper.setVisibleEditor(EditorAreaHelper.java:271)
	at org.eclipse.ui.internal.EditorManager.setVisibleEditor(EditorManager.java:1417)
	at org.eclipse.ui.internal.EditorManager$5.runWithException(EditorManager.java:942)
	at org.eclipse.ui.internal.StartupThreading$StartupRunnable.run(StartupThreading.java:31)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3855)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3476)
	at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.java:803)
	at org.eclipse.ui.internal.Workbench$28.runWithException(Workbench.java:1384)
	at org.eclipse.ui.internal.StartupThreading$StartupRunnable.run(StartupThreading.java:31)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3855)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3476)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2316)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
!SUBENTRY 1 org.eclipse.ui 4 0 2010-03-14 19:33:10.375
!MESSAGE No editor descriptor for id org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart

!ENTRY org.eclipse.ui 2 2 2010-03-14 19:33:10.476
!MESSAGE Ignored attempt to add saveable that was already registered
!STACK 0
org.eclipse.core.runtime.AssertionFailedException: unknown saveable: org.eclipse.ui.internal.DefaultSaveable@f6fd54 from part: org.eclipse.ui.internal.ErrorEditorPart@f6fd54
	at org.eclipse.ui.internal.SaveablesList.logWarning(SaveablesList.java:187)
	at org.eclipse.ui.internal.SaveablesList.addModel(SaveablesList.java:117)
	at org.eclipse.ui.internal.SaveablesList.addModels(SaveablesList.java:289)
	at org.eclipse.ui.internal.SaveablesList.postOpen(SaveablesList.java:684)
	at org.eclipse.ui.internal.PartList.partOpened(PartList.java:234)
	at org.eclipse.ui.internal.PartList.access$0(PartList.java:210)
	at org.eclipse.ui.internal.PartList$1.propertyChanged(PartList.java:40)
	at org.eclipse.ui.internal.WorkbenchPartReference.fireInternalPropertyChange(WorkbenchPartReference.java:375)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:610)
	at org.eclipse.ui.internal.EditorAreaHelper.setVisibleEditor(EditorAreaHelper.java:271)
	at org.eclipse.ui.internal.EditorManager.setVisibleEditor(EditorManager.java:1417)
	at org.eclipse.ui.internal.EditorManager$5.runWithException(EditorManager.java:942)
	at org.eclipse.ui.internal.StartupThreading$StartupRunnable.run(StartupThreading.java:31)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3855)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3476)
	at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.java:803)
	at org.eclipse.ui.internal.Workbench$28.runWithException(Workbench.java:1384)
	at org.eclipse.ui.internal.StartupThreading$StartupRunnable.run(StartupThreading.java:31)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3855)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3476)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2316)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)

!ENTRY org.eclipse.ui 4 0 2010-03-14 19:33:14.317
!MESSAGE Problems occurred restoring workbench.
!SUBENTRY 1 org.eclipse.ui 0 0 2010-03-14 19:33:14.317
!MESSAGE 
!SUBENTRY 1 org.eclipse.core.runtime 0 0 2010-03-14 19:33:14.317
!MESSAGE OK
!SUBENTRY 1 org.eclipse.core.runtime 0 0 2010-03-14 19:33:14.317
!MESSAGE OK
!SUBENTRY 1 org.eclipse.core.runtime 0 0 2010-03-14 19:33:14.317
!MESSAGE OK
!SUBENTRY 1 org.eclipse.ui 4 0 2010-03-14 19:33:14.317
!MESSAGE Unable to restore perspective: Workspace - Java.
!SUBENTRY 2 org.eclipse.ui 0 0 2010-03-14 19:33:14.317
!MESSAGE Problems occurred restoring perspective.
!SUBENTRY 3 org.eclipse.ui 0 0 2010-03-14 19:33:14.317
!MESSAGE 
!SUBENTRY 2 org.eclipse.ui 0 0 2010-03-14 19:33:14.318
!MESSAGE 
!SUBENTRY 2 org.eclipse.ui 0 0 2010-03-14 19:33:14.318
!MESSAGE 
!SUBENTRY 2 org.eclipse.ui 0 0 2010-03-14 19:33:14.318
!MESSAGE 
!SUBENTRY 2 org.eclipse.ui 4 4 2010-03-14 19:33:14.318
!MESSAGE Could not create view: org.eclipse.mylyn.tasks.ui.views.tasks
!STACK 1
org.eclipse.ui.PartInitException: Could not create view: org.eclipse.mylyn.tasks.ui.views.tasks
	at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:158)
	at org.eclipse.ui.internal.Perspective.createReferences(Perspective.java:1247)
	at org.eclipse.ui.internal.Perspective.restoreState(Perspective.java:1217)
	at org.eclipse.ui.internal.WorkbenchPage$17.runWithException(WorkbenchPage.java:3205)
	at org.eclipse.ui.internal.StartupThreading$StartupRunnable.run(StartupThreading.java:31)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3855)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3476)
	at org.eclipse.ui.application.WorkbenchAdvisor.openWindows(WorkbenchAdvisor.java:803)
	at org.eclipse.ui.internal.Workbench$28.runWithException(Workbench.java:1384)
	at org.eclipse.ui.internal.StartupThreading$StartupRunnable.run(StartupThreading.java:31)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3855)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3476)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2316)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
!SUBENTRY 3 org.eclipse.ui 4 0 2010-03-14 19:33:14.318
!MESSAGE Could not create view: org.eclipse.mylyn.tasks.ui.views.tasks
!SUBENTRY 2 org.eclipse.ui 0 0 2010-03-14 19:33:14.318
!MESSAGE 
!SUBENTRY 2 org.eclipse.ui 0 0 2010-03-14 19:33:14.318
!MESSAGE 
!SUBENTRY 2 org.eclipse.ui 0 0 2010-03-14 19:33:14.318
!MESSAGE 
!SUBENTRY 2 org.eclipse.ui 0 0 2010-03-14 19:33:14.318
!MESSAGE 
!SUBENTRY 2 org.eclipse.ui 0 0 2010-03-14 19:33:14.318
!MESSAGE 
!SUBENTRY 2 org.eclipse.ui 0 0 2010-03-14 19:33:14.318
!MESSAGE 
!SUBENTRY 2 org.eclipse.ui 4 0 2010-03-14 19:33:14.318
!MESSAGE Could not find view: org.eclipse.mylyn.tasks.ui.views.tasks
!SUBENTRY 1 org.eclipse.core.runtime 0 0 2010-03-14 19:33:14.318
!MESSAGE OK

!ENTRY org.eclipse.jdt.launching 1 0 2010-03-14 19:33:14.999
!MESSAGE Installed JRE 'JVM 1.3' removed due to missing VM type extension.

!ENTRY org.eclipse.jdt.launching 1 0 2010-03-14 19:33:15.000
!MESSAGE Installed JRE 'JVM 1.3.1' removed due to missing VM type extension.

!ENTRY org.eclipse.jdt.launching 1 0 2010-03-14 19:33:15.001
!MESSAGE Installed JRE 'JVM 1.4' removed due to missing VM type extension.

!ENTRY org.eclipse.jdt.launching 1 0 2010-03-14 19:33:15.001
!MESSAGE Installed JRE 'JVM 1.4.2' removed due to missing VM type extension.

!ENTRY org.eclipse.jdt.launching 1 0 2010-03-14 19:33:15.001
!MESSAGE Installed JRE 'JVM 1.5' removed due to missing VM type extension.

!ENTRY org.eclipse.jdt.launching 1 0 2010-03-14 19:33:15.002
!MESSAGE Installed JRE 'JVM 1.5.0 (MacOS X Default)' removed due to missing VM type extension.

!ENTRY org.eclipse.ui 4 0 2010-03-14 19:35:35.031
!MESSAGE Unable to create editor ID org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart: No editor descriptor for id org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart
!STACK 1
org.eclipse.ui.PartInitException: No editor descriptor for id org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:598)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:462)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:313)
	at org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:180)
	at org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:270)
	at org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)
	at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:473)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1256)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1209)
	at org.eclipse.ui.internal.PartStack.presentationSelectionChanged(PartStack.java:843)
	at org.eclipse.ui.internal.PartStack.access$1(PartStack.java:829)
	at org.eclipse.ui.internal.PartStack$1.selectPart(PartStack.java:139)
	at org.eclipse.ui.internal.presentations.BasicPartList.gotoSelectedElement(BasicPartList.java:326)
	at org.eclipse.ui.internal.presentations.AbstractTableInformationControl$4.mouseUp(AbstractTableInformationControl.java:306)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1003)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3880)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3473)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
!SUBENTRY 1 org.eclipse.ui 4 0 2010-03-14 19:35:35.032
!MESSAGE No editor descriptor for id org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart

!ENTRY org.eclipse.ui 2 2 2010-03-14 19:35:35.042
!MESSAGE Ignored attempt to add saveable that was already registered
!STACK 0
org.eclipse.core.runtime.AssertionFailedException: unknown saveable: org.eclipse.ui.internal.DefaultSaveable@108759d from part: org.eclipse.ui.internal.ErrorEditorPart@108759d
	at org.eclipse.ui.internal.SaveablesList.logWarning(SaveablesList.java:187)
	at org.eclipse.ui.internal.SaveablesList.addModel(SaveablesList.java:117)
	at org.eclipse.ui.internal.SaveablesList.addModels(SaveablesList.java:289)
	at org.eclipse.ui.internal.SaveablesList.postOpen(SaveablesList.java:684)
	at org.eclipse.ui.internal.PartList.partOpened(PartList.java:234)
	at org.eclipse.ui.internal.PartList.access$0(PartList.java:210)
	at org.eclipse.ui.internal.PartList$1.propertyChanged(PartList.java:40)
	at org.eclipse.ui.internal.WorkbenchPartReference.fireInternalPropertyChange(WorkbenchPartReference.java:375)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:610)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:313)
	at org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:180)
	at org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:270)
	at org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)
	at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:473)
	at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1256)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1209)
	at org.eclipse.ui.internal.PartStack.presentationSelectionChanged(PartStack.java:843)
	at org.eclipse.ui.internal.PartStack.access$1(PartStack.java:829)
	at org.eclipse.ui.internal.PartStack$1.selectPart(PartStack.java:139)
	at org.eclipse.ui.internal.presentations.BasicPartList.gotoSelectedElement(BasicPartList.java:326)
	at org.eclipse.ui.internal.presentations.AbstractTableInformationControl$4.mouseUp(AbstractTableInformationControl.java:306)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1003)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3880)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3473)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
!SESSION 2010-03-15 18:16:09.683 -----------------------------------------------
eclipse.buildId=M20090917-0800
java.version=1.6.0_18
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY org.eclipse.core.resources 2 10035 2010-03-15 18:16:15.791
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.ui 4 0 2010-03-15 18:17:49.455
!MESSAGE Unable to create editor ID org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart: No editor descriptor for id org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart
!STACK 1
org.eclipse.ui.PartInitException: No editor descriptor for id org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:598)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:462)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:286)
	at org.eclipse.ui.internal.EditorManager.findEditor(EditorManager.java:403)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2799)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2762)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2754)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2705)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2701)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2685)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2676)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:361)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:168)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:229)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:208)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:274)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:250)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:373)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:526)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:842)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.runtime.Platform.run(Platform.java:888)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:48)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:840)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1101)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1205)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:264)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:258)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:298)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1003)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3880)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3473)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
!SUBENTRY 1 org.eclipse.ui 4 0 2010-03-15 18:17:49.457
!MESSAGE No editor descriptor for id org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart

!ENTRY org.eclipse.ui 2 2 2010-03-15 18:17:49.508
!MESSAGE Ignored attempt to add saveable that was already registered
!STACK 0
org.eclipse.core.runtime.AssertionFailedException: unknown saveable: org.eclipse.ui.internal.DefaultSaveable@1973732 from part: org.eclipse.ui.internal.ErrorEditorPart@1973732
	at org.eclipse.ui.internal.SaveablesList.logWarning(SaveablesList.java:187)
	at org.eclipse.ui.internal.SaveablesList.addModel(SaveablesList.java:117)
	at org.eclipse.ui.internal.SaveablesList.addModels(SaveablesList.java:289)
	at org.eclipse.ui.internal.SaveablesList.postOpen(SaveablesList.java:684)
	at org.eclipse.ui.internal.PartList.partOpened(PartList.java:234)
	at org.eclipse.ui.internal.PartList.access$0(PartList.java:210)
	at org.eclipse.ui.internal.PartList$1.propertyChanged(PartList.java:40)
	at org.eclipse.ui.internal.WorkbenchPartReference.fireInternalPropertyChange(WorkbenchPartReference.java:375)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:610)
	at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:286)
	at org.eclipse.ui.internal.EditorManager.findEditor(EditorManager.java:403)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2799)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2762)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2754)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2705)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2701)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2685)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2676)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:361)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:168)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:229)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:208)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:274)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:250)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:373)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:526)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:842)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.runtime.Platform.run(Platform.java:888)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:48)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:840)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1101)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1205)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:264)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:258)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:298)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1003)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3880)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3473)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)

!ENTRY org.eclipse.ui 4 0 2010-03-15 18:17:51.938
!MESSAGE Unable to create editor ID org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart: No editor descriptor for id org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart
!STACK 1
org.eclipse.ui.PartInitException: No editor descriptor for id org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart
	at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:598)
	at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:462)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595)
	at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:286)
	at org.eclipse.ui.internal.EditorManager.findEditor(EditorManager.java:403)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2799)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2762)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2754)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2705)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2701)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2685)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2676)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:361)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:168)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:229)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:208)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:274)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:250)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:373)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:526)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:842)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.runtime.Platform.run(Platform.java:888)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:48)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:840)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1101)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1205)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:264)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:258)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:298)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1003)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3880)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3473)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
!SUBENTRY 1 org.eclipse.ui 4 0 2010-03-15 18:17:51.938
!MESSAGE No editor descriptor for id org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorPart

!ENTRY org.eclipse.ui 2 2 2010-03-15 18:17:51.948
!MESSAGE Ignored attempt to add saveable that was already registered
!STACK 0
org.eclipse.core.runtime.AssertionFailedException: unknown saveable: org.eclipse.ui.internal.DefaultSaveable@f3bed9 from part: org.eclipse.ui.internal.ErrorEditorPart@f3bed9
	at org.eclipse.ui.internal.SaveablesList.logWarning(SaveablesList.java:187)
	at org.eclipse.ui.internal.SaveablesList.addModel(SaveablesList.java:117)
	at org.eclipse.ui.internal.SaveablesList.addModels(SaveablesList.java:289)
	at org.eclipse.ui.internal.SaveablesList.postOpen(SaveablesList.java:684)
	at org.eclipse.ui.internal.PartList.partOpened(PartList.java:234)
	at org.eclipse.ui.internal.PartList.access$0(PartList.java:210)
	at org.eclipse.ui.internal.PartList$1.propertyChanged(PartList.java:40)
	at org.eclipse.ui.internal.WorkbenchPartReference.fireInternalPropertyChange(WorkbenchPartReference.java:375)
	at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:610)
	at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:286)
	at org.eclipse.ui.internal.EditorManager.findEditor(EditorManager.java:403)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2799)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2762)
	at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2754)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2705)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2701)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2685)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2676)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:361)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:168)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:229)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:208)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:274)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:250)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:373)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:526)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:842)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.runtime.Platform.run(Platform.java:888)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:48)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:840)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1101)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1205)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:264)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:258)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:298)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1003)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3880)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3473)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
!SESSION 2010-04-14 14:07:52.259 -----------------------------------------------
eclipse.buildId=M20090917-0800
java.version=1.6.0_19
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY org.eclipse.core.resources 2 10035 2010-04-14 14:08:01.931
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.
!SESSION 2010-04-19 19:12:12.756 -----------------------------------------------
eclipse.buildId=M20090917-0800
java.version=1.6.0_19
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY org.eclipse.core.resources 2 10035 2010-04-19 19:12:19.043
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.
!SESSION 2010-04-19 19:23:11.346 -----------------------------------------------
eclipse.buildId=M20090917-0800
java.version=1.6.0_19
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY org.eclipse.core.resources 2 10035 2010-04-19 19:23:20.363
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.
!SESSION 2010-05-11 11:34:06.036 -----------------------------------------------
eclipse.buildId=M20100211-1343
java.version=1.6.0_19
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY lslplus 1 1 2010-05-11 11:37:09.557
!MESSAGE executablePath = /C:/eclipse/plugins/lslplus_win32_x86_0.13.1/os/win32/x86/LslPlus.exe

!ENTRY lslplus 1 1 2010-05-11 11:37:10.290
!MESSAGE metaDataString = <sim-meta-data><eventDescriptors><event-def><name>Chat</name><description>Avatar chats</description><params><param><name>Avatar</name><description>The avatar that should do the chatting</description><type class="avatar"></type></param><param><name>Message</name><description>What the avatar should say</description><type class="value"><valueType>string</valueType></type></param><param><name>Channel</name><description>The channel to chat on</description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>Touch Prim</name><description>Avatar touches a prim for a duration</description><params><param><name>Prim</name><description>The prim the avatar should touch</description><type class="prim"></type></param><param><name>Avatar</name><description>The avatar that should do the touching</description><type class="avatar"></type></param><param><name>Duration</name><description>The duration of the touch (in seconds)</description><type class="value"><valueType>float</valueType></type></param></params></event-def><event-def><name>at_rot_target</name><description>This is a raw LSL event: raised when a scripted object comes within an angular distance of a target rotation</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetRot</name><description></description><type class="value"><valueType>rotation</valueType></type></param><param><name>ourrot</name><description></description><type class="value"><valueType>rotation</valueType></type></param></params></event-def><event-def><name>at_target</name><description>This is a raw LSL event: raised when a scripted object comes within a distance of a target posisition</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetPos</name><description></description><type class="value"><valueType>vector</valueType></type></param><param><name>ourpos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>attach</name><description>This is a raw LSL event: raised whenever the scripted object becomes attached or detached from an avatar</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>changed</name><description>This is a raw LSL event: raised whenever one of a variety of changes occur to a prim/object containing the script</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision</name><description>This is a raw LSL event: raised when a scripted object collides with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>control</name><description>This is a raw LSL event: raised when a the state of controls change, if the script has &apos;taken controls&apos;</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>held</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>dataserver</name><description>This is a raw LSL event: raised when data is received from the dataserver (in response to one of a variety of ll-function calls)</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>queryid</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>data</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>email</name><description>This is a raw LSL event: raised when the llGetNextEmail function call is answered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>time</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>address</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>subj</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>num_left</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>http_request</name><description>This is a raw LSL event: raised when an script receives an http request</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>method</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>http_response</name><description>This is a raw LSL event: raised when an http response is received for an http request that is pending</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>status</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>metadata</name><description></description><type class="value"><valueType>list</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>land_collision</name><description>This is a raw LSL event: raised when a scripted object is colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>link_message</name><description>This is a raw LSL event: raised when a scripted prim receives a link message, sent via llMessageLinked</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>sender_num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>str</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>listen</name><description>This is a raw LSL event: raised whenever &apos;chat&apos; is detected that matches constraints specified via a llListen call</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>channel</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>name</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>money</name><description>This is a raw LSL event: raised when an agent pays a Linden dollar amount to the object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>amount</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>moving_end</name><description>This is a raw LSL event: raised when a scripted object stops moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>moving_start</name><description>This is a raw LSL event: raised when a scripted object starts moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>no_sensor</name><description>This is a raw LSL event: raised when sensors are active, but are not sensing anything</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_rot_target</name><description>This is a raw LSL event: raised when a scripted object is outside the specified angular distance of a target set by llRotTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_target</name><description>This is a raw LSL event: raised when a scripted object is outside a specified range of a target set by llTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>object_rez</name><description>This is a raw LSL event: raised when a script rezzes another object.  The id is the GUID of the object that it rezzed</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>on_rez</name><description>This is a raw LSL event: raised when an object rezzes (from an agents inventory, an objects inventory, or as an attachment when an user logs on)</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>start_param</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>remote_data</name><description>This is a raw LSL event: raised when something XML-RPC related happens</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>event_type</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>channel</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>sender</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>idata</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>sdata</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>run_time_permissions</name><description>This is a raw LSL event: raised when permissions granted to a script change, or a user responds to a permission request from the script</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>perm</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>sensor</name><description>This is a raw LSL event: raised when the sensor set up by llSensor/llSensorRepeat senses something</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Sensed Avatar/Ojbect Key</description><type class="any-key"></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>state_entry</name><description>This is a raw LSL event: raised when a state is entered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>state_exit</name><description>This is a raw LSL event: raised when a state is exited</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>timer</name><description>This is a raw LSL event: raised when the timer set up by llSetTimerEvent triggers</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>touch</name><description>This is a raw LSL event: raised when an agent touches a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Grab vector</name><description>Force applied by agent grabbing prim</description><type class="value"><valueType>vector</valueType></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_end</name><description>This is a raw LSL event: raised when an agent stops touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_start</name><description>This is a raw LSL event: raised when an agent starts touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def></eventDescriptors></sim-meta-data>
!SESSION 2010-05-12 19:55:43.457 -----------------------------------------------
eclipse.buildId=M20100211-1343
java.version=1.6.0_19
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY lslplus 1 1 2010-05-12 19:56:08.939
!MESSAGE executablePath = /C:/eclipse/plugins/lslplus_win32_x86_0.13.1/os/win32/x86/LslPlus.exe

!ENTRY lslplus 1 1 2010-05-12 19:56:09.260
!MESSAGE metaDataString = <sim-meta-data><eventDescriptors><event-def><name>Chat</name><description>Avatar chats</description><params><param><name>Avatar</name><description>The avatar that should do the chatting</description><type class="avatar"></type></param><param><name>Message</name><description>What the avatar should say</description><type class="value"><valueType>string</valueType></type></param><param><name>Channel</name><description>The channel to chat on</description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>Touch Prim</name><description>Avatar touches a prim for a duration</description><params><param><name>Prim</name><description>The prim the avatar should touch</description><type class="prim"></type></param><param><name>Avatar</name><description>The avatar that should do the touching</description><type class="avatar"></type></param><param><name>Duration</name><description>The duration of the touch (in seconds)</description><type class="value"><valueType>float</valueType></type></param></params></event-def><event-def><name>at_rot_target</name><description>This is a raw LSL event: raised when a scripted object comes within an angular distance of a target rotation</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetRot</name><description></description><type class="value"><valueType>rotation</valueType></type></param><param><name>ourrot</name><description></description><type class="value"><valueType>rotation</valueType></type></param></params></event-def><event-def><name>at_target</name><description>This is a raw LSL event: raised when a scripted object comes within a distance of a target posisition</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetPos</name><description></description><type class="value"><valueType>vector</valueType></type></param><param><name>ourpos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>attach</name><description>This is a raw LSL event: raised whenever the scripted object becomes attached or detached from an avatar</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>changed</name><description>This is a raw LSL event: raised whenever one of a variety of changes occur to a prim/object containing the script</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision</name><description>This is a raw LSL event: raised when a scripted object collides with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>control</name><description>This is a raw LSL event: raised when a the state of controls change, if the script has &apos;taken controls&apos;</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>held</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>dataserver</name><description>This is a raw LSL event: raised when data is received from the dataserver (in response to one of a variety of ll-function calls)</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>queryid</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>data</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>email</name><description>This is a raw LSL event: raised when the llGetNextEmail function call is answered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>time</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>address</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>subj</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>num_left</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>http_request</name><description>This is a raw LSL event: raised when an script receives an http request</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>method</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>http_response</name><description>This is a raw LSL event: raised when an http response is received for an http request that is pending</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>status</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>metadata</name><description></description><type class="value"><valueType>list</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>land_collision</name><description>This is a raw LSL event: raised when a scripted object is colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>link_message</name><description>This is a raw LSL event: raised when a scripted prim receives a link message, sent via llMessageLinked</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>sender_num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>str</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>listen</name><description>This is a raw LSL event: raised whenever &apos;chat&apos; is detected that matches constraints specified via a llListen call</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>channel</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>name</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>money</name><description>This is a raw LSL event: raised when an agent pays a Linden dollar amount to the object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>amount</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>moving_end</name><description>This is a raw LSL event: raised when a scripted object stops moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>moving_start</name><description>This is a raw LSL event: raised when a scripted object starts moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>no_sensor</name><description>This is a raw LSL event: raised when sensors are active, but are not sensing anything</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_rot_target</name><description>This is a raw LSL event: raised when a scripted object is outside the specified angular distance of a target set by llRotTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_target</name><description>This is a raw LSL event: raised when a scripted object is outside a specified range of a target set by llTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>object_rez</name><description>This is a raw LSL event: raised when a script rezzes another object.  The id is the GUID of the object that it rezzed</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>on_rez</name><description>This is a raw LSL event: raised when an object rezzes (from an agents inventory, an objects inventory, or as an attachment when an user logs on)</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>start_param</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>remote_data</name><description>This is a raw LSL event: raised when something XML-RPC related happens</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>event_type</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>channel</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>sender</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>idata</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>sdata</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>run_time_permissions</name><description>This is a raw LSL event: raised when permissions granted to a script change, or a user responds to a permission request from the script</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>perm</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>sensor</name><description>This is a raw LSL event: raised when the sensor set up by llSensor/llSensorRepeat senses something</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Sensed Avatar/Ojbect Key</description><type class="any-key"></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>state_entry</name><description>This is a raw LSL event: raised when a state is entered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>state_exit</name><description>This is a raw LSL event: raised when a state is exited</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>timer</name><description>This is a raw LSL event: raised when the timer set up by llSetTimerEvent triggers</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>touch</name><description>This is a raw LSL event: raised when an agent touches a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Grab vector</name><description>Force applied by agent grabbing prim</description><type class="value"><valueType>vector</valueType></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_end</name><description>This is a raw LSL event: raised when an agent stops touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_start</name><description>This is a raw LSL event: raised when an agent starts touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def></eventDescriptors></sim-meta-data>
!SESSION 2010-05-14 18:11:15.138 -----------------------------------------------
eclipse.buildId=M20100211-1343
java.version=1.6.0_19
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY org.eclipse.core.resources 2 10035 2010-05-14 18:11:22.324
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY lslplus 1 1 2010-05-14 18:11:31.878
!MESSAGE executablePath = /C:/eclipse/plugins/lslplus_win32_x86_0.13.1/os/win32/x86/LslPlus.exe

!ENTRY lslplus 1 1 2010-05-14 18:11:32.138
!MESSAGE metaDataString = <sim-meta-data><eventDescriptors><event-def><name>Chat</name><description>Avatar chats</description><params><param><name>Avatar</name><description>The avatar that should do the chatting</description><type class="avatar"></type></param><param><name>Message</name><description>What the avatar should say</description><type class="value"><valueType>string</valueType></type></param><param><name>Channel</name><description>The channel to chat on</description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>Touch Prim</name><description>Avatar touches a prim for a duration</description><params><param><name>Prim</name><description>The prim the avatar should touch</description><type class="prim"></type></param><param><name>Avatar</name><description>The avatar that should do the touching</description><type class="avatar"></type></param><param><name>Duration</name><description>The duration of the touch (in seconds)</description><type class="value"><valueType>float</valueType></type></param></params></event-def><event-def><name>at_rot_target</name><description>This is a raw LSL event: raised when a scripted object comes within an angular distance of a target rotation</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetRot</name><description></description><type class="value"><valueType>rotation</valueType></type></param><param><name>ourrot</name><description></description><type class="value"><valueType>rotation</valueType></type></param></params></event-def><event-def><name>at_target</name><description>This is a raw LSL event: raised when a scripted object comes within a distance of a target posisition</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetPos</name><description></description><type class="value"><valueType>vector</valueType></type></param><param><name>ourpos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>attach</name><description>This is a raw LSL event: raised whenever the scripted object becomes attached or detached from an avatar</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>changed</name><description>This is a raw LSL event: raised whenever one of a variety of changes occur to a prim/object containing the script</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision</name><description>This is a raw LSL event: raised when a scripted object collides with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>control</name><description>This is a raw LSL event: raised when a the state of controls change, if the script has &apos;taken controls&apos;</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>held</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>dataserver</name><description>This is a raw LSL event: raised when data is received from the dataserver (in response to one of a variety of ll-function calls)</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>queryid</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>data</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>email</name><description>This is a raw LSL event: raised when the llGetNextEmail function call is answered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>time</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>address</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>subj</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>num_left</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>http_request</name><description>This is a raw LSL event: raised when an script receives an http request</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>method</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>http_response</name><description>This is a raw LSL event: raised when an http response is received for an http request that is pending</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>status</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>metadata</name><description></description><type class="value"><valueType>list</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>land_collision</name><description>This is a raw LSL event: raised when a scripted object is colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>link_message</name><description>This is a raw LSL event: raised when a scripted prim receives a link message, sent via llMessageLinked</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>sender_num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>str</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>listen</name><description>This is a raw LSL event: raised whenever &apos;chat&apos; is detected that matches constraints specified via a llListen call</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>channel</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>name</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>money</name><description>This is a raw LSL event: raised when an agent pays a Linden dollar amount to the object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>amount</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>moving_end</name><description>This is a raw LSL event: raised when a scripted object stops moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>moving_start</name><description>This is a raw LSL event: raised when a scripted object starts moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>no_sensor</name><description>This is a raw LSL event: raised when sensors are active, but are not sensing anything</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_rot_target</name><description>This is a raw LSL event: raised when a scripted object is outside the specified angular distance of a target set by llRotTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_target</name><description>This is a raw LSL event: raised when a scripted object is outside a specified range of a target set by llTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>object_rez</name><description>This is a raw LSL event: raised when a script rezzes another object.  The id is the GUID of the object that it rezzed</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>on_rez</name><description>This is a raw LSL event: raised when an object rezzes (from an agents inventory, an objects inventory, or as an attachment when an user logs on)</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>start_param</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>remote_data</name><description>This is a raw LSL event: raised when something XML-RPC related happens</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>event_type</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>channel</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>sender</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>idata</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>sdata</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>run_time_permissions</name><description>This is a raw LSL event: raised when permissions granted to a script change, or a user responds to a permission request from the script</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>perm</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>sensor</name><description>This is a raw LSL event: raised when the sensor set up by llSensor/llSensorRepeat senses something</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Sensed Avatar/Ojbect Key</description><type class="any-key"></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>state_entry</name><description>This is a raw LSL event: raised when a state is entered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>state_exit</name><description>This is a raw LSL event: raised when a state is exited</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>timer</name><description>This is a raw LSL event: raised when the timer set up by llSetTimerEvent triggers</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>touch</name><description>This is a raw LSL event: raised when an agent touches a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Grab vector</name><description>Force applied by agent grabbing prim</description><type class="value"><valueType>vector</valueType></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_end</name><description>This is a raw LSL event: raised when an agent stops touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_start</name><description>This is a raw LSL event: raised when an agent starts touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def></eventDescriptors></sim-meta-data>
!SESSION 2010-05-17 22:00:51.826 -----------------------------------------------
eclipse.buildId=M20100211-1343
java.version=1.6.0_19
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY lslplus 1 1 2010-05-17 22:06:21.775
!MESSAGE executablePath = /C:/eclipse/plugins/lslplus_win32_x86_0.13.1/os/win32/x86/LslPlus.exe

!ENTRY lslplus 1 1 2010-05-17 22:06:22.115
!MESSAGE metaDataString = <sim-meta-data><eventDescriptors><event-def><name>Chat</name><description>Avatar chats</description><params><param><name>Avatar</name><description>The avatar that should do the chatting</description><type class="avatar"></type></param><param><name>Message</name><description>What the avatar should say</description><type class="value"><valueType>string</valueType></type></param><param><name>Channel</name><description>The channel to chat on</description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>Touch Prim</name><description>Avatar touches a prim for a duration</description><params><param><name>Prim</name><description>The prim the avatar should touch</description><type class="prim"></type></param><param><name>Avatar</name><description>The avatar that should do the touching</description><type class="avatar"></type></param><param><name>Duration</name><description>The duration of the touch (in seconds)</description><type class="value"><valueType>float</valueType></type></param></params></event-def><event-def><name>at_rot_target</name><description>This is a raw LSL event: raised when a scripted object comes within an angular distance of a target rotation</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetRot</name><description></description><type class="value"><valueType>rotation</valueType></type></param><param><name>ourrot</name><description></description><type class="value"><valueType>rotation</valueType></type></param></params></event-def><event-def><name>at_target</name><description>This is a raw LSL event: raised when a scripted object comes within a distance of a target posisition</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetPos</name><description></description><type class="value"><valueType>vector</valueType></type></param><param><name>ourpos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>attach</name><description>This is a raw LSL event: raised whenever the scripted object becomes attached or detached from an avatar</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>changed</name><description>This is a raw LSL event: raised whenever one of a variety of changes occur to a prim/object containing the script</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision</name><description>This is a raw LSL event: raised when a scripted object collides with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>control</name><description>This is a raw LSL event: raised when a the state of controls change, if the script has &apos;taken controls&apos;</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>held</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>dataserver</name><description>This is a raw LSL event: raised when data is received from the dataserver (in response to one of a variety of ll-function calls)</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>queryid</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>data</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>email</name><description>This is a raw LSL event: raised when the llGetNextEmail function call is answered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>time</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>address</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>subj</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>num_left</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>http_request</name><description>This is a raw LSL event: raised when an script receives an http request</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>method</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>http_response</name><description>This is a raw LSL event: raised when an http response is received for an http request that is pending</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>status</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>metadata</name><description></description><type class="value"><valueType>list</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>land_collision</name><description>This is a raw LSL event: raised when a scripted object is colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>link_message</name><description>This is a raw LSL event: raised when a scripted prim receives a link message, sent via llMessageLinked</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>sender_num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>str</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>listen</name><description>This is a raw LSL event: raised whenever &apos;chat&apos; is detected that matches constraints specified via a llListen call</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>channel</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>name</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>money</name><description>This is a raw LSL event: raised when an agent pays a Linden dollar amount to the object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>amount</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>moving_end</name><description>This is a raw LSL event: raised when a scripted object stops moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>moving_start</name><description>This is a raw LSL event: raised when a scripted object starts moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>no_sensor</name><description>This is a raw LSL event: raised when sensors are active, but are not sensing anything</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_rot_target</name><description>This is a raw LSL event: raised when a scripted object is outside the specified angular distance of a target set by llRotTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_target</name><description>This is a raw LSL event: raised when a scripted object is outside a specified range of a target set by llTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>object_rez</name><description>This is a raw LSL event: raised when a script rezzes another object.  The id is the GUID of the object that it rezzed</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>on_rez</name><description>This is a raw LSL event: raised when an object rezzes (from an agents inventory, an objects inventory, or as an attachment when an user logs on)</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>start_param</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>remote_data</name><description>This is a raw LSL event: raised when something XML-RPC related happens</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>event_type</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>channel</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>sender</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>idata</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>sdata</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>run_time_permissions</name><description>This is a raw LSL event: raised when permissions granted to a script change, or a user responds to a permission request from the script</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>perm</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>sensor</name><description>This is a raw LSL event: raised when the sensor set up by llSensor/llSensorRepeat senses something</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Sensed Avatar/Ojbect Key</description><type class="any-key"></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>state_entry</name><description>This is a raw LSL event: raised when a state is entered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>state_exit</name><description>This is a raw LSL event: raised when a state is exited</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>timer</name><description>This is a raw LSL event: raised when the timer set up by llSetTimerEvent triggers</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>touch</name><description>This is a raw LSL event: raised when an agent touches a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Grab vector</name><description>Force applied by agent grabbing prim</description><type class="value"><valueType>vector</valueType></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_end</name><description>This is a raw LSL event: raised when an agent stops touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_start</name><description>This is a raw LSL event: raised when an agent starts touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def></eventDescriptors></sim-meta-data>
!SESSION 2010-05-18 21:45:06.396 -----------------------------------------------
eclipse.buildId=M20100211-1343
java.version=1.6.0_19
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY lslplus 1 1 2010-05-18 21:45:24.727
!MESSAGE executablePath = /C:/eclipse/plugins/lslplus_win32_x86_0.13.1/os/win32/x86/LslPlus.exe

!ENTRY lslplus 1 1 2010-05-18 21:45:25.006
!MESSAGE metaDataString = <sim-meta-data><eventDescriptors><event-def><name>Chat</name><description>Avatar chats</description><params><param><name>Avatar</name><description>The avatar that should do the chatting</description><type class="avatar"></type></param><param><name>Message</name><description>What the avatar should say</description><type class="value"><valueType>string</valueType></type></param><param><name>Channel</name><description>The channel to chat on</description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>Touch Prim</name><description>Avatar touches a prim for a duration</description><params><param><name>Prim</name><description>The prim the avatar should touch</description><type class="prim"></type></param><param><name>Avatar</name><description>The avatar that should do the touching</description><type class="avatar"></type></param><param><name>Duration</name><description>The duration of the touch (in seconds)</description><type class="value"><valueType>float</valueType></type></param></params></event-def><event-def><name>at_rot_target</name><description>This is a raw LSL event: raised when a scripted object comes within an angular distance of a target rotation</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetRot</name><description></description><type class="value"><valueType>rotation</valueType></type></param><param><name>ourrot</name><description></description><type class="value"><valueType>rotation</valueType></type></param></params></event-def><event-def><name>at_target</name><description>This is a raw LSL event: raised when a scripted object comes within a distance of a target posisition</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetPos</name><description></description><type class="value"><valueType>vector</valueType></type></param><param><name>ourpos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>attach</name><description>This is a raw LSL event: raised whenever the scripted object becomes attached or detached from an avatar</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>changed</name><description>This is a raw LSL event: raised whenever one of a variety of changes occur to a prim/object containing the script</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision</name><description>This is a raw LSL event: raised when a scripted object collides with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>control</name><description>This is a raw LSL event: raised when a the state of controls change, if the script has &apos;taken controls&apos;</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>held</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>dataserver</name><description>This is a raw LSL event: raised when data is received from the dataserver (in response to one of a variety of ll-function calls)</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>queryid</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>data</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>email</name><description>This is a raw LSL event: raised when the llGetNextEmail function call is answered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>time</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>address</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>subj</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>num_left</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>http_request</name><description>This is a raw LSL event: raised when an script receives an http request</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>method</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>http_response</name><description>This is a raw LSL event: raised when an http response is received for an http request that is pending</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>status</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>metadata</name><description></description><type class="value"><valueType>list</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>land_collision</name><description>This is a raw LSL event: raised when a scripted object is colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>link_message</name><description>This is a raw LSL event: raised when a scripted prim receives a link message, sent via llMessageLinked</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>sender_num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>str</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>listen</name><description>This is a raw LSL event: raised whenever &apos;chat&apos; is detected that matches constraints specified via a llListen call</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>channel</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>name</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>money</name><description>This is a raw LSL event: raised when an agent pays a Linden dollar amount to the object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>amount</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>moving_end</name><description>This is a raw LSL event: raised when a scripted object stops moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>moving_start</name><description>This is a raw LSL event: raised when a scripted object starts moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>no_sensor</name><description>This is a raw LSL event: raised when sensors are active, but are not sensing anything</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_rot_target</name><description>This is a raw LSL event: raised when a scripted object is outside the specified angular distance of a target set by llRotTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_target</name><description>This is a raw LSL event: raised when a scripted object is outside a specified range of a target set by llTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>object_rez</name><description>This is a raw LSL event: raised when a script rezzes another object.  The id is the GUID of the object that it rezzed</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>on_rez</name><description>This is a raw LSL event: raised when an object rezzes (from an agents inventory, an objects inventory, or as an attachment when an user logs on)</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>start_param</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>remote_data</name><description>This is a raw LSL event: raised when something XML-RPC related happens</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>event_type</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>channel</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>sender</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>idata</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>sdata</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>run_time_permissions</name><description>This is a raw LSL event: raised when permissions granted to a script change, or a user responds to a permission request from the script</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>perm</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>sensor</name><description>This is a raw LSL event: raised when the sensor set up by llSensor/llSensorRepeat senses something</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Sensed Avatar/Ojbect Key</description><type class="any-key"></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>state_entry</name><description>This is a raw LSL event: raised when a state is entered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>state_exit</name><description>This is a raw LSL event: raised when a state is exited</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>timer</name><description>This is a raw LSL event: raised when the timer set up by llSetTimerEvent triggers</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>touch</name><description>This is a raw LSL event: raised when an agent touches a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Grab vector</name><description>Force applied by agent grabbing prim</description><type class="value"><valueType>vector</valueType></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_end</name><description>This is a raw LSL event: raised when an agent stops touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_start</name><description>This is a raw LSL event: raised when an agent starts touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def></eventDescriptors></sim-meta-data>
!SESSION 2010-05-19 18:08:25.342 -----------------------------------------------
eclipse.buildId=M20100211-1343
java.version=1.6.0_19
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY lslplus 1 1 2010-05-19 18:08:50.521
!MESSAGE executablePath = /C:/eclipse/plugins/lslplus_win32_x86_0.13.1/os/win32/x86/LslPlus.exe

!ENTRY lslplus 1 1 2010-05-19 18:08:50.782
!MESSAGE metaDataString = <sim-meta-data><eventDescriptors><event-def><name>Chat</name><description>Avatar chats</description><params><param><name>Avatar</name><description>The avatar that should do the chatting</description><type class="avatar"></type></param><param><name>Message</name><description>What the avatar should say</description><type class="value"><valueType>string</valueType></type></param><param><name>Channel</name><description>The channel to chat on</description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>Touch Prim</name><description>Avatar touches a prim for a duration</description><params><param><name>Prim</name><description>The prim the avatar should touch</description><type class="prim"></type></param><param><name>Avatar</name><description>The avatar that should do the touching</description><type class="avatar"></type></param><param><name>Duration</name><description>The duration of the touch (in seconds)</description><type class="value"><valueType>float</valueType></type></param></params></event-def><event-def><name>at_rot_target</name><description>This is a raw LSL event: raised when a scripted object comes within an angular distance of a target rotation</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetRot</name><description></description><type class="value"><valueType>rotation</valueType></type></param><param><name>ourrot</name><description></description><type class="value"><valueType>rotation</valueType></type></param></params></event-def><event-def><name>at_target</name><description>This is a raw LSL event: raised when a scripted object comes within a distance of a target posisition</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetPos</name><description></description><type class="value"><valueType>vector</valueType></type></param><param><name>ourpos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>attach</name><description>This is a raw LSL event: raised whenever the scripted object becomes attached or detached from an avatar</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>changed</name><description>This is a raw LSL event: raised whenever one of a variety of changes occur to a prim/object containing the script</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision</name><description>This is a raw LSL event: raised when a scripted object collides with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>control</name><description>This is a raw LSL event: raised when a the state of controls change, if the script has &apos;taken controls&apos;</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>held</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>dataserver</name><description>This is a raw LSL event: raised when data is received from the dataserver (in response to one of a variety of ll-function calls)</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>queryid</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>data</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>email</name><description>This is a raw LSL event: raised when the llGetNextEmail function call is answered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>time</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>address</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>subj</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>num_left</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>http_request</name><description>This is a raw LSL event: raised when an script receives an http request</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>method</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>http_response</name><description>This is a raw LSL event: raised when an http response is received for an http request that is pending</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>status</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>metadata</name><description></description><type class="value"><valueType>list</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>land_collision</name><description>This is a raw LSL event: raised when a scripted object is colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>link_message</name><description>This is a raw LSL event: raised when a scripted prim receives a link message, sent via llMessageLinked</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>sender_num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>str</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>listen</name><description>This is a raw LSL event: raised whenever &apos;chat&apos; is detected that matches constraints specified via a llListen call</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>channel</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>name</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>money</name><description>This is a raw LSL event: raised when an agent pays a Linden dollar amount to the object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>amount</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>moving_end</name><description>This is a raw LSL event: raised when a scripted object stops moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>moving_start</name><description>This is a raw LSL event: raised when a scripted object starts moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>no_sensor</name><description>This is a raw LSL event: raised when sensors are active, but are not sensing anything</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_rot_target</name><description>This is a raw LSL event: raised when a scripted object is outside the specified angular distance of a target set by llRotTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_target</name><description>This is a raw LSL event: raised when a scripted object is outside a specified range of a target set by llTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>object_rez</name><description>This is a raw LSL event: raised when a script rezzes another object.  The id is the GUID of the object that it rezzed</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>on_rez</name><description>This is a raw LSL event: raised when an object rezzes (from an agents inventory, an objects inventory, or as an attachment when an user logs on)</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>start_param</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>remote_data</name><description>This is a raw LSL event: raised when something XML-RPC related happens</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>event_type</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>channel</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>sender</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>idata</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>sdata</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>run_time_permissions</name><description>This is a raw LSL event: raised when permissions granted to a script change, or a user responds to a permission request from the script</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>perm</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>sensor</name><description>This is a raw LSL event: raised when the sensor set up by llSensor/llSensorRepeat senses something</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Sensed Avatar/Ojbect Key</description><type class="any-key"></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>state_entry</name><description>This is a raw LSL event: raised when a state is entered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>state_exit</name><description>This is a raw LSL event: raised when a state is exited</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>timer</name><description>This is a raw LSL event: raised when the timer set up by llSetTimerEvent triggers</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>touch</name><description>This is a raw LSL event: raised when an agent touches a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Grab vector</name><description>Force applied by agent grabbing prim</description><type class="value"><valueType>vector</valueType></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_end</name><description>This is a raw LSL event: raised when an agent stops touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_start</name><description>This is a raw LSL event: raised when an agent starts touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def></eventDescriptors></sim-meta-data>
!SESSION 2010-06-13 18:28:51.830 -----------------------------------------------
eclipse.buildId=M20100211-1343
java.version=1.6.0_20
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY org.eclipse.core.resources 2 10035 2010-06-13 18:28:59.049
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY lslplus 1 1 2010-06-13 18:29:14.800
!MESSAGE executablePath = /C:/eclipse/plugins/lslplus_win32_x86_0.13.1/os/win32/x86/LslPlus.exe

!ENTRY lslplus 1 1 2010-06-13 18:29:15.093
!MESSAGE metaDataString = <sim-meta-data><eventDescriptors><event-def><name>Chat</name><description>Avatar chats</description><params><param><name>Avatar</name><description>The avatar that should do the chatting</description><type class="avatar"></type></param><param><name>Message</name><description>What the avatar should say</description><type class="value"><valueType>string</valueType></type></param><param><name>Channel</name><description>The channel to chat on</description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>Touch Prim</name><description>Avatar touches a prim for a duration</description><params><param><name>Prim</name><description>The prim the avatar should touch</description><type class="prim"></type></param><param><name>Avatar</name><description>The avatar that should do the touching</description><type class="avatar"></type></param><param><name>Duration</name><description>The duration of the touch (in seconds)</description><type class="value"><valueType>float</valueType></type></param></params></event-def><event-def><name>at_rot_target</name><description>This is a raw LSL event: raised when a scripted object comes within an angular distance of a target rotation</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetRot</name><description></description><type class="value"><valueType>rotation</valueType></type></param><param><name>ourrot</name><description></description><type class="value"><valueType>rotation</valueType></type></param></params></event-def><event-def><name>at_target</name><description>This is a raw LSL event: raised when a scripted object comes within a distance of a target posisition</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetPos</name><description></description><type class="value"><valueType>vector</valueType></type></param><param><name>ourpos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>attach</name><description>This is a raw LSL event: raised whenever the scripted object becomes attached or detached from an avatar</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>changed</name><description>This is a raw LSL event: raised whenever one of a variety of changes occur to a prim/object containing the script</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision</name><description>This is a raw LSL event: raised when a scripted object collides with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>control</name><description>This is a raw LSL event: raised when a the state of controls change, if the script has &apos;taken controls&apos;</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>held</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>dataserver</name><description>This is a raw LSL event: raised when data is received from the dataserver (in response to one of a variety of ll-function calls)</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>queryid</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>data</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>email</name><description>This is a raw LSL event: raised when the llGetNextEmail function call is answered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>time</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>address</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>subj</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>num_left</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>http_request</name><description>This is a raw LSL event: raised when an script receives an http request</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>method</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>http_response</name><description>This is a raw LSL event: raised when an http response is received for an http request that is pending</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>status</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>metadata</name><description></description><type class="value"><valueType>list</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>land_collision</name><description>This is a raw LSL event: raised when a scripted object is colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>link_message</name><description>This is a raw LSL event: raised when a scripted prim receives a link message, sent via llMessageLinked</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>sender_num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>str</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>listen</name><description>This is a raw LSL event: raised whenever &apos;chat&apos; is detected that matches constraints specified via a llListen call</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>channel</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>name</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>money</name><description>This is a raw LSL event: raised when an agent pays a Linden dollar amount to the object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>amount</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>moving_end</name><description>This is a raw LSL event: raised when a scripted object stops moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>moving_start</name><description>This is a raw LSL event: raised when a scripted object starts moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>no_sensor</name><description>This is a raw LSL event: raised when sensors are active, but are not sensing anything</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_rot_target</name><description>This is a raw LSL event: raised when a scripted object is outside the specified angular distance of a target set by llRotTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_target</name><description>This is a raw LSL event: raised when a scripted object is outside a specified range of a target set by llTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>object_rez</name><description>This is a raw LSL event: raised when a script rezzes another object.  The id is the GUID of the object that it rezzed</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>on_rez</name><description>This is a raw LSL event: raised when an object rezzes (from an agents inventory, an objects inventory, or as an attachment when an user logs on)</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>start_param</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>remote_data</name><description>This is a raw LSL event: raised when something XML-RPC related happens</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>event_type</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>channel</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>sender</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>idata</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>sdata</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>run_time_permissions</name><description>This is a raw LSL event: raised when permissions granted to a script change, or a user responds to a permission request from the script</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>perm</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>sensor</name><description>This is a raw LSL event: raised when the sensor set up by llSensor/llSensorRepeat senses something</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Sensed Avatar/Ojbect Key</description><type class="any-key"></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>state_entry</name><description>This is a raw LSL event: raised when a state is entered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>state_exit</name><description>This is a raw LSL event: raised when a state is exited</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>timer</name><description>This is a raw LSL event: raised when the timer set up by llSetTimerEvent triggers</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>touch</name><description>This is a raw LSL event: raised when an agent touches a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Grab vector</name><description>Force applied by agent grabbing prim</description><type class="value"><valueType>vector</valueType></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_end</name><description>This is a raw LSL event: raised when an agent stops touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_start</name><description>This is a raw LSL event: raised when an agent starts touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def></eventDescriptors></sim-meta-data>

!ENTRY org.eclipse.jdt.ui 4 0 2010-06-13 20:10:37.704
!MESSAGE The 'org.eclipse.jdt.ui.TemplateProposalComputer' proposal computer from the 'org.eclipse.jdt.ui' plug-in did not complete normally. Unable to instantiate the extension.
!STACK 1
org.eclipse.core.runtime.CoreException: Plug-in "org.eclipse.jdt.ui" was unable to instantiate class "org.eclipse.jdt.internal.ui.text.java.TemplateCompletionProposalComputer".
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.throwException(RegistryStrategyOSGI.java:180)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:172)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:874)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.createComputer(CompletionProposalComputerDescriptor.java:291)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.getComputer(CompletionProposalComputerDescriptor.java:258)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.sessionStarted(CompletionProposalComputerDescriptor.java:401)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalCategory.sessionStarted(CompletionProposalCategory.java:313)
	at org.eclipse.jdt.internal.ui.text.java.ContentAssistProcessor$CompletionListener.assistSessionStarted(ContentAssistProcessor.java:113)
	at org.eclipse.jface.text.contentassist.ContentAssistant.fireSessionBeginEvent(ContentAssistant.java:2214)
	at org.eclipse.jface.text.contentassist.ContentAssistant.prepareToShowCompletions(ContentAssistant.java:1689)
	at org.eclipse.jface.text.contentassist.ContentAssistant.access$6(ContentAssistant.java:1682)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:374)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3885)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3506)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
Caused by: java.lang.NullPointerException
	at org.eclipse.jdt.internal.ui.JavaPlugin.getTemplateContextRegistry(JavaPlugin.java:793)
	at org.eclipse.jdt.internal.ui.text.java.TemplateCompletionProposalComputer.<init>(TemplateCompletionProposalComputer.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at java.lang.Class.newInstance0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:170)
	... 36 more
!SUBENTRY 1 org.eclipse.equinox.registry 4 1 2010-06-13 20:10:37.705
!MESSAGE Plug-in "org.eclipse.jdt.ui" was unable to instantiate class "org.eclipse.jdt.internal.ui.text.java.TemplateCompletionProposalComputer".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jdt.internal.ui.JavaPlugin.getTemplateContextRegistry(JavaPlugin.java:793)
	at org.eclipse.jdt.internal.ui.text.java.TemplateCompletionProposalComputer.<init>(TemplateCompletionProposalComputer.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at java.lang.Class.newInstance0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:170)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:874)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.createComputer(CompletionProposalComputerDescriptor.java:291)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.getComputer(CompletionProposalComputerDescriptor.java:258)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.sessionStarted(CompletionProposalComputerDescriptor.java:401)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalCategory.sessionStarted(CompletionProposalCategory.java:313)
	at org.eclipse.jdt.internal.ui.text.java.ContentAssistProcessor$CompletionListener.assistSessionStarted(ContentAssistProcessor.java:113)
	at org.eclipse.jface.text.contentassist.ContentAssistant.fireSessionBeginEvent(ContentAssistant.java:2214)
	at org.eclipse.jface.text.contentassist.ContentAssistant.prepareToShowCompletions(ContentAssistant.java:1689)
	at org.eclipse.jface.text.contentassist.ContentAssistant.access$6(ContentAssistant.java:1682)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:374)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3885)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3506)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)

!ENTRY org.eclipse.jdt.ui 4 0 2010-06-13 20:10:41.534
!MESSAGE The 'org.eclipse.jdt.ui.swtBuilderCompletionProposalComputer' proposal computer from the 'org.eclipse.jdt.ui' plug-in did not complete normally. Unable to instantiate the extension.
!STACK 1
org.eclipse.core.runtime.CoreException: Plug-in "org.eclipse.jdt.ui" was unable to instantiate class "org.eclipse.jdt.internal.ui.text.java.SWTTemplateCompletionProposalComputer".
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.throwException(RegistryStrategyOSGI.java:180)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:172)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:874)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.createComputer(CompletionProposalComputerDescriptor.java:291)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.getComputer(CompletionProposalComputerDescriptor.java:258)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.sessionStarted(CompletionProposalComputerDescriptor.java:401)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalCategory.sessionStarted(CompletionProposalCategory.java:313)
	at org.eclipse.jdt.internal.ui.text.java.ContentAssistProcessor$CompletionListener.assistSessionStarted(ContentAssistProcessor.java:113)
	at org.eclipse.jface.text.contentassist.ContentAssistant.fireSessionBeginEvent(ContentAssistant.java:2214)
	at org.eclipse.jface.text.contentassist.ContentAssistant.prepareToShowCompletions(ContentAssistant.java:1689)
	at org.eclipse.jface.text.contentassist.ContentAssistant.access$6(ContentAssistant.java:1682)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:374)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3885)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3506)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
Caused by: java.lang.NullPointerException
	at org.eclipse.jdt.internal.ui.JavaPlugin.getTemplateContextRegistry(JavaPlugin.java:793)
	at org.eclipse.jdt.internal.ui.text.java.SWTTemplateCompletionProposalComputer.<init>(SWTTemplateCompletionProposalComputer.java:137)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at java.lang.Class.newInstance0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:170)
	... 36 more
!SUBENTRY 1 org.eclipse.equinox.registry 4 1 2010-06-13 20:10:41.534
!MESSAGE Plug-in "org.eclipse.jdt.ui" was unable to instantiate class "org.eclipse.jdt.internal.ui.text.java.SWTTemplateCompletionProposalComputer".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jdt.internal.ui.JavaPlugin.getTemplateContextRegistry(JavaPlugin.java:793)
	at org.eclipse.jdt.internal.ui.text.java.SWTTemplateCompletionProposalComputer.<init>(SWTTemplateCompletionProposalComputer.java:137)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at java.lang.Class.newInstance0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:170)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:874)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.createComputer(CompletionProposalComputerDescriptor.java:291)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.getComputer(CompletionProposalComputerDescriptor.java:258)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.sessionStarted(CompletionProposalComputerDescriptor.java:401)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalCategory.sessionStarted(CompletionProposalCategory.java:313)
	at org.eclipse.jdt.internal.ui.text.java.ContentAssistProcessor$CompletionListener.assistSessionStarted(ContentAssistProcessor.java:113)
	at org.eclipse.jface.text.contentassist.ContentAssistant.fireSessionBeginEvent(ContentAssistant.java:2214)
	at org.eclipse.jface.text.contentassist.ContentAssistant.prepareToShowCompletions(ContentAssistant.java:1689)
	at org.eclipse.jface.text.contentassist.ContentAssistant.access$6(ContentAssistant.java:1682)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:374)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3885)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3506)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
!SESSION 2010-06-15 21:09:40.038 -----------------------------------------------
eclipse.buildId=M20100211-1343
java.version=1.6.0_20
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY lslplus 1 1 2010-06-15 21:10:05.638
!MESSAGE executablePath = /C:/eclipse/plugins/lslplus_win32_x86_0.13.1/os/win32/x86/LslPlus.exe

!ENTRY lslplus 1 1 2010-06-15 21:10:06.325
!MESSAGE metaDataString = <sim-meta-data><eventDescriptors><event-def><name>Chat</name><description>Avatar chats</description><params><param><name>Avatar</name><description>The avatar that should do the chatting</description><type class="avatar"></type></param><param><name>Message</name><description>What the avatar should say</description><type class="value"><valueType>string</valueType></type></param><param><name>Channel</name><description>The channel to chat on</description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>Touch Prim</name><description>Avatar touches a prim for a duration</description><params><param><name>Prim</name><description>The prim the avatar should touch</description><type class="prim"></type></param><param><name>Avatar</name><description>The avatar that should do the touching</description><type class="avatar"></type></param><param><name>Duration</name><description>The duration of the touch (in seconds)</description><type class="value"><valueType>float</valueType></type></param></params></event-def><event-def><name>at_rot_target</name><description>This is a raw LSL event: raised when a scripted object comes within an angular distance of a target rotation</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetRot</name><description></description><type class="value"><valueType>rotation</valueType></type></param><param><name>ourrot</name><description></description><type class="value"><valueType>rotation</valueType></type></param></params></event-def><event-def><name>at_target</name><description>This is a raw LSL event: raised when a scripted object comes within a distance of a target posisition</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetPos</name><description></description><type class="value"><valueType>vector</valueType></type></param><param><name>ourpos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>attach</name><description>This is a raw LSL event: raised whenever the scripted object becomes attached or detached from an avatar</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>changed</name><description>This is a raw LSL event: raised whenever one of a variety of changes occur to a prim/object containing the script</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision</name><description>This is a raw LSL event: raised when a scripted object collides with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>control</name><description>This is a raw LSL event: raised when a the state of controls change, if the script has &apos;taken controls&apos;</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>held</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>dataserver</name><description>This is a raw LSL event: raised when data is received from the dataserver (in response to one of a variety of ll-function calls)</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>queryid</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>data</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>email</name><description>This is a raw LSL event: raised when the llGetNextEmail function call is answered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>time</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>address</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>subj</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>num_left</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>http_request</name><description>This is a raw LSL event: raised when an script receives an http request</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>method</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>http_response</name><description>This is a raw LSL event: raised when an http response is received for an http request that is pending</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>status</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>metadata</name><description></description><type class="value"><valueType>list</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>land_collision</name><description>This is a raw LSL event: raised when a scripted object is colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>link_message</name><description>This is a raw LSL event: raised when a scripted prim receives a link message, sent via llMessageLinked</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>sender_num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>str</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>listen</name><description>This is a raw LSL event: raised whenever &apos;chat&apos; is detected that matches constraints specified via a llListen call</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>channel</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>name</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>money</name><description>This is a raw LSL event: raised when an agent pays a Linden dollar amount to the object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>amount</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>moving_end</name><description>This is a raw LSL event: raised when a scripted object stops moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>moving_start</name><description>This is a raw LSL event: raised when a scripted object starts moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>no_sensor</name><description>This is a raw LSL event: raised when sensors are active, but are not sensing anything</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_rot_target</name><description>This is a raw LSL event: raised when a scripted object is outside the specified angular distance of a target set by llRotTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_target</name><description>This is a raw LSL event: raised when a scripted object is outside a specified range of a target set by llTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>object_rez</name><description>This is a raw LSL event: raised when a script rezzes another object.  The id is the GUID of the object that it rezzed</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>on_rez</name><description>This is a raw LSL event: raised when an object rezzes (from an agents inventory, an objects inventory, or as an attachment when an user logs on)</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>start_param</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>remote_data</name><description>This is a raw LSL event: raised when something XML-RPC related happens</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>event_type</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>channel</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>sender</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>idata</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>sdata</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>run_time_permissions</name><description>This is a raw LSL event: raised when permissions granted to a script change, or a user responds to a permission request from the script</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>perm</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>sensor</name><description>This is a raw LSL event: raised when the sensor set up by llSensor/llSensorRepeat senses something</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Sensed Avatar/Ojbect Key</description><type class="any-key"></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>state_entry</name><description>This is a raw LSL event: raised when a state is entered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>state_exit</name><description>This is a raw LSL event: raised when a state is exited</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>timer</name><description>This is a raw LSL event: raised when the timer set up by llSetTimerEvent triggers</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>touch</name><description>This is a raw LSL event: raised when an agent touches a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Grab vector</name><description>Force applied by agent grabbing prim</description><type class="value"><valueType>vector</valueType></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_end</name><description>This is a raw LSL event: raised when an agent stops touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_start</name><description>This is a raw LSL event: raised when an agent starts touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def></eventDescriptors></sim-meta-data>

!ENTRY org.eclipse.jdt.ui 4 0 2010-06-15 21:48:25.780
!MESSAGE The 'org.eclipse.jdt.ui.TemplateProposalComputer' proposal computer from the 'org.eclipse.jdt.ui' plug-in did not complete normally. Unable to instantiate the extension.
!STACK 1
org.eclipse.core.runtime.CoreException: Plug-in "org.eclipse.jdt.ui" was unable to instantiate class "org.eclipse.jdt.internal.ui.text.java.TemplateCompletionProposalComputer".
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.throwException(RegistryStrategyOSGI.java:180)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:172)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:874)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.createComputer(CompletionProposalComputerDescriptor.java:291)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.getComputer(CompletionProposalComputerDescriptor.java:258)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.sessionStarted(CompletionProposalComputerDescriptor.java:401)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalCategory.sessionStarted(CompletionProposalCategory.java:313)
	at org.eclipse.jdt.internal.ui.text.java.ContentAssistProcessor$CompletionListener.assistSessionStarted(ContentAssistProcessor.java:113)
	at org.eclipse.jface.text.contentassist.ContentAssistant.fireSessionBeginEvent(ContentAssistant.java:2214)
	at org.eclipse.jface.text.contentassist.ContentAssistant.prepareToShowCompletions(ContentAssistant.java:1689)
	at org.eclipse.jface.text.contentassist.ContentAssistant.access$6(ContentAssistant.java:1682)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:374)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3885)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3506)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
Caused by: java.lang.NullPointerException
	at org.eclipse.jdt.internal.ui.JavaPlugin.getTemplateContextRegistry(JavaPlugin.java:793)
	at org.eclipse.jdt.internal.ui.text.java.TemplateCompletionProposalComputer.<init>(TemplateCompletionProposalComputer.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at java.lang.Class.newInstance0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:170)
	... 36 more
!SUBENTRY 1 org.eclipse.equinox.registry 4 1 2010-06-15 21:48:25.781
!MESSAGE Plug-in "org.eclipse.jdt.ui" was unable to instantiate class "org.eclipse.jdt.internal.ui.text.java.TemplateCompletionProposalComputer".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jdt.internal.ui.JavaPlugin.getTemplateContextRegistry(JavaPlugin.java:793)
	at org.eclipse.jdt.internal.ui.text.java.TemplateCompletionProposalComputer.<init>(TemplateCompletionProposalComputer.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at java.lang.Class.newInstance0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:170)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:874)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.createComputer(CompletionProposalComputerDescriptor.java:291)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.getComputer(CompletionProposalComputerDescriptor.java:258)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.sessionStarted(CompletionProposalComputerDescriptor.java:401)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalCategory.sessionStarted(CompletionProposalCategory.java:313)
	at org.eclipse.jdt.internal.ui.text.java.ContentAssistProcessor$CompletionListener.assistSessionStarted(ContentAssistProcessor.java:113)
	at org.eclipse.jface.text.contentassist.ContentAssistant.fireSessionBeginEvent(ContentAssistant.java:2214)
	at org.eclipse.jface.text.contentassist.ContentAssistant.prepareToShowCompletions(ContentAssistant.java:1689)
	at org.eclipse.jface.text.contentassist.ContentAssistant.access$6(ContentAssistant.java:1682)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:374)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3885)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3506)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)

!ENTRY org.eclipse.jdt.ui 4 0 2010-06-15 21:48:26.547
!MESSAGE The 'org.eclipse.jdt.ui.swtBuilderCompletionProposalComputer' proposal computer from the 'org.eclipse.jdt.ui' plug-in did not complete normally. Unable to instantiate the extension.
!STACK 1
org.eclipse.core.runtime.CoreException: Plug-in "org.eclipse.jdt.ui" was unable to instantiate class "org.eclipse.jdt.internal.ui.text.java.SWTTemplateCompletionProposalComputer".
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.throwException(RegistryStrategyOSGI.java:180)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:172)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:874)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.createComputer(CompletionProposalComputerDescriptor.java:291)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.getComputer(CompletionProposalComputerDescriptor.java:258)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.sessionStarted(CompletionProposalComputerDescriptor.java:401)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalCategory.sessionStarted(CompletionProposalCategory.java:313)
	at org.eclipse.jdt.internal.ui.text.java.ContentAssistProcessor$CompletionListener.assistSessionStarted(ContentAssistProcessor.java:113)
	at org.eclipse.jface.text.contentassist.ContentAssistant.fireSessionBeginEvent(ContentAssistant.java:2214)
	at org.eclipse.jface.text.contentassist.ContentAssistant.prepareToShowCompletions(ContentAssistant.java:1689)
	at org.eclipse.jface.text.contentassist.ContentAssistant.access$6(ContentAssistant.java:1682)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:374)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3885)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3506)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
Caused by: java.lang.NullPointerException
	at org.eclipse.jdt.internal.ui.JavaPlugin.getTemplateContextRegistry(JavaPlugin.java:793)
	at org.eclipse.jdt.internal.ui.text.java.SWTTemplateCompletionProposalComputer.<init>(SWTTemplateCompletionProposalComputer.java:137)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at java.lang.Class.newInstance0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:170)
	... 36 more
!SUBENTRY 1 org.eclipse.equinox.registry 4 1 2010-06-15 21:48:26.548
!MESSAGE Plug-in "org.eclipse.jdt.ui" was unable to instantiate class "org.eclipse.jdt.internal.ui.text.java.SWTTemplateCompletionProposalComputer".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jdt.internal.ui.JavaPlugin.getTemplateContextRegistry(JavaPlugin.java:793)
	at org.eclipse.jdt.internal.ui.text.java.SWTTemplateCompletionProposalComputer.<init>(SWTTemplateCompletionProposalComputer.java:137)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at java.lang.Class.newInstance0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:170)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:874)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:51)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.createComputer(CompletionProposalComputerDescriptor.java:291)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.getComputer(CompletionProposalComputerDescriptor.java:258)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.sessionStarted(CompletionProposalComputerDescriptor.java:401)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalCategory.sessionStarted(CompletionProposalCategory.java:313)
	at org.eclipse.jdt.internal.ui.text.java.ContentAssistProcessor$CompletionListener.assistSessionStarted(ContentAssistProcessor.java:113)
	at org.eclipse.jface.text.contentassist.ContentAssistant.fireSessionBeginEvent(ContentAssistant.java:2214)
	at org.eclipse.jface.text.contentassist.ContentAssistant.prepareToShowCompletions(ContentAssistant.java:1689)
	at org.eclipse.jface.text.contentassist.ContentAssistant.access$6(ContentAssistant.java:1682)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:374)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3885)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3506)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
!SESSION 2010-06-16 21:02:11.520 -----------------------------------------------
eclipse.buildId=M20100211-1343
java.version=1.6.0_20
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY lslplus 1 1 2010-06-16 21:03:32.290
!MESSAGE executablePath = /C:/eclipse/plugins/lslplus_win32_x86_0.13.1/os/win32/x86/LslPlus.exe

!ENTRY lslplus 1 1 2010-06-16 21:03:32.564
!MESSAGE metaDataString = <sim-meta-data><eventDescriptors><event-def><name>Chat</name><description>Avatar chats</description><params><param><name>Avatar</name><description>The avatar that should do the chatting</description><type class="avatar"></type></param><param><name>Message</name><description>What the avatar should say</description><type class="value"><valueType>string</valueType></type></param><param><name>Channel</name><description>The channel to chat on</description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>Touch Prim</name><description>Avatar touches a prim for a duration</description><params><param><name>Prim</name><description>The prim the avatar should touch</description><type class="prim"></type></param><param><name>Avatar</name><description>The avatar that should do the touching</description><type class="avatar"></type></param><param><name>Duration</name><description>The duration of the touch (in seconds)</description><type class="value"><valueType>float</valueType></type></param></params></event-def><event-def><name>at_rot_target</name><description>This is a raw LSL event: raised when a scripted object comes within an angular distance of a target rotation</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetRot</name><description></description><type class="value"><valueType>rotation</valueType></type></param><param><name>ourrot</name><description></description><type class="value"><valueType>rotation</valueType></type></param></params></event-def><event-def><name>at_target</name><description>This is a raw LSL event: raised when a scripted object comes within a distance of a target posisition</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetPos</name><description></description><type class="value"><valueType>vector</valueType></type></param><param><name>ourpos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>attach</name><description>This is a raw LSL event: raised whenever the scripted object becomes attached or detached from an avatar</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>changed</name><description>This is a raw LSL event: raised whenever one of a variety of changes occur to a prim/object containing the script</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision</name><description>This is a raw LSL event: raised when a scripted object collides with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>control</name><description>This is a raw LSL event: raised when a the state of controls change, if the script has &apos;taken controls&apos;</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>held</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>dataserver</name><description>This is a raw LSL event: raised when data is received from the dataserver (in response to one of a variety of ll-function calls)</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>queryid</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>data</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>email</name><description>This is a raw LSL event: raised when the llGetNextEmail function call is answered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>time</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>address</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>subj</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>num_left</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>http_request</name><description>This is a raw LSL event: raised when an script receives an http request</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>method</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>http_response</name><description>This is a raw LSL event: raised when an http response is received for an http request that is pending</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>status</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>metadata</name><description></description><type class="value"><valueType>list</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>land_collision</name><description>This is a raw LSL event: raised when a scripted object is colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>link_message</name><description>This is a raw LSL event: raised when a scripted prim receives a link message, sent via llMessageLinked</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>sender_num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>str</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>listen</name><description>This is a raw LSL event: raised whenever &apos;chat&apos; is detected that matches constraints specified via a llListen call</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>channel</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>name</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>money</name><description>This is a raw LSL event: raised when an agent pays a Linden dollar amount to the object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>amount</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>moving_end</name><description>This is a raw LSL event: raised when a scripted object stops moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>moving_start</name><description>This is a raw LSL event: raised when a scripted object starts moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>no_sensor</name><description>This is a raw LSL event: raised when sensors are active, but are not sensing anything</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_rot_target</name><description>This is a raw LSL event: raised when a scripted object is outside the specified angular distance of a target set by llRotTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_target</name><description>This is a raw LSL event: raised when a scripted object is outside a specified range of a target set by llTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>object_rez</name><description>This is a raw LSL event: raised when a script rezzes another object.  The id is the GUID of the object that it rezzed</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>on_rez</name><description>This is a raw LSL event: raised when an object rezzes (from an agents inventory, an objects inventory, or as an attachment when an user logs on)</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>start_param</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>remote_data</name><description>This is a raw LSL event: raised when something XML-RPC related happens</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>event_type</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>channel</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>sender</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>idata</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>sdata</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>run_time_permissions</name><description>This is a raw LSL event: raised when permissions granted to a script change, or a user responds to a permission request from the script</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>perm</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>sensor</name><description>This is a raw LSL event: raised when the sensor set up by llSensor/llSensorRepeat senses something</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Sensed Avatar/Ojbect Key</description><type class="any-key"></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>state_entry</name><description>This is a raw LSL event: raised when a state is entered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>state_exit</name><description>This is a raw LSL event: raised when a state is exited</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>timer</name><description>This is a raw LSL event: raised when the timer set up by llSetTimerEvent triggers</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>touch</name><description>This is a raw LSL event: raised when an agent touches a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Grab vector</name><description>Force applied by agent grabbing prim</description><type class="value"><valueType>vector</valueType></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_end</name><description>This is a raw LSL event: raised when an agent stops touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_start</name><description>This is a raw LSL event: raised when an agent starts touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def></eventDescriptors></sim-meta-data>
!SESSION 2010-06-20 20:28:47.866 -----------------------------------------------
eclipse.buildId=M20100211-1343
java.version=1.6.0_20
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments:  -os win32 -ws win32 -arch x86

!ENTRY lslplus 1 1 2010-06-20 20:29:15.505
!MESSAGE executablePath = /C:/eclipse/plugins/lslplus_win32_x86_0.13.1/os/win32/x86/LslPlus.exe

!ENTRY lslplus 1 1 2010-06-20 20:29:16.129
!MESSAGE metaDataString = <sim-meta-data><eventDescriptors><event-def><name>Chat</name><description>Avatar chats</description><params><param><name>Avatar</name><description>The avatar that should do the chatting</description><type class="avatar"></type></param><param><name>Message</name><description>What the avatar should say</description><type class="value"><valueType>string</valueType></type></param><param><name>Channel</name><description>The channel to chat on</description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>Touch Prim</name><description>Avatar touches a prim for a duration</description><params><param><name>Prim</name><description>The prim the avatar should touch</description><type class="prim"></type></param><param><name>Avatar</name><description>The avatar that should do the touching</description><type class="avatar"></type></param><param><name>Duration</name><description>The duration of the touch (in seconds)</description><type class="value"><valueType>float</valueType></type></param></params></event-def><event-def><name>at_rot_target</name><description>This is a raw LSL event: raised when a scripted object comes within an angular distance of a target rotation</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetRot</name><description></description><type class="value"><valueType>rotation</valueType></type></param><param><name>ourrot</name><description></description><type class="value"><valueType>rotation</valueType></type></param></params></event-def><event-def><name>at_target</name><description>This is a raw LSL event: raised when a scripted object comes within a distance of a target posisition</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>tnum</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>targetPos</name><description></description><type class="value"><valueType>vector</valueType></type></param><param><name>ourpos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>attach</name><description>This is a raw LSL event: raised whenever the scripted object becomes attached or detached from an avatar</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>changed</name><description>This is a raw LSL event: raised whenever one of a variety of changes occur to a prim/object containing the script</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision</name><description>This is a raw LSL event: raised when a scripted object collides with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with another object/avatar</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Avatar/Object key for collision</description><type class="any-key"></type></param><param><name>Link Number</name><description>Link Source of Collision</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>control</name><description>This is a raw LSL event: raised when a the state of controls change, if the script has &apos;taken controls&apos;</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>held</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>change</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>dataserver</name><description>This is a raw LSL event: raised when data is received from the dataserver (in response to one of a variety of ll-function calls)</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>queryid</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>data</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>email</name><description>This is a raw LSL event: raised when the llGetNextEmail function call is answered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>time</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>address</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>subj</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>num_left</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>http_request</name><description>This is a raw LSL event: raised when an script receives an http request</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>method</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>http_response</name><description>This is a raw LSL event: raised when an http response is received for an http request that is pending</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>request_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>status</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>metadata</name><description></description><type class="value"><valueType>list</valueType></type></param><param><name>body</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>land_collision</name><description>This is a raw LSL event: raised when a scripted object is colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_end</name><description>This is a raw LSL event: raised when a scripted object stops colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>land_collision_start</name><description>This is a raw LSL event: raised when a scripted object starts colliding with the ground</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>pos</name><description></description><type class="value"><valueType>vector</valueType></type></param></params></event-def><event-def><name>link_message</name><description>This is a raw LSL event: raised when a scripted prim receives a link message, sent via llMessageLinked</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>sender_num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>num</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>str</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>listen</name><description>This is a raw LSL event: raised whenever &apos;chat&apos; is detected that matches constraints specified via a llListen call</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>channel</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>name</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>money</name><description>This is a raw LSL event: raised when an agent pays a Linden dollar amount to the object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>amount</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>moving_end</name><description>This is a raw LSL event: raised when a scripted object stops moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>moving_start</name><description>This is a raw LSL event: raised when a scripted object starts moving or has entered a different region</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param></params></event-def><event-def><name>no_sensor</name><description>This is a raw LSL event: raised when sensors are active, but are not sensing anything</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_rot_target</name><description>This is a raw LSL event: raised when a scripted object is outside the specified angular distance of a target set by llRotTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>not_at_target</name><description>This is a raw LSL event: raised when a scripted object is outside a specified range of a target set by llTarget</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>object_rez</name><description>This is a raw LSL event: raised when a script rezzes another object.  The id is the GUID of the object that it rezzed</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>id</name><description></description><type class="value"><valueType>key</valueType></type></param></params></event-def><event-def><name>on_rez</name><description>This is a raw LSL event: raised when an object rezzes (from an agents inventory, an objects inventory, or as an attachment when an user logs on)</description><params><param><name>Object Key</name><description>key of object to deliver to</description><type class="object"></type></param><param><name>start_param</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>remote_data</name><description>This is a raw LSL event: raised when something XML-RPC related happens</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>event_type</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>channel</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>message_id</name><description></description><type class="value"><valueType>key</valueType></type></param><param><name>sender</name><description></description><type class="value"><valueType>string</valueType></type></param><param><name>idata</name><description></description><type class="value"><valueType>integer</valueType></type></param><param><name>sdata</name><description></description><type class="value"><valueType>string</valueType></type></param></params></event-def><event-def><name>run_time_permissions</name><description>This is a raw LSL event: raised when permissions granted to a script change, or a user responds to a permission request from the script</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>perm</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>sensor</name><description>This is a raw LSL event: raised when the sensor set up by llSensor/llSensorRepeat senses something</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar/Object key</name><description>Sensed Avatar/Ojbect Key</description><type class="any-key"></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>state_entry</name><description>This is a raw LSL event: raised when a state is entered</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>state_exit</name><description>This is a raw LSL event: raised when a state is exited</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>timer</name><description>This is a raw LSL event: raised when the timer set up by llSetTimerEvent triggers</description><params><param><name>Script</name><description>name of script to deliver to</description><type class="script"></type></param><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param></params></event-def><event-def><name>touch</name><description>This is a raw LSL event: raised when an agent touches a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Grab vector</name><description>Force applied by agent grabbing prim</description><type class="value"><valueType>vector</valueType></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_end</name><description>This is a raw LSL event: raised when an agent stops touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def><event-def><name>touch_start</name><description>This is a raw LSL event: raised when an agent starts touching a scripted object</description><params><param><name>Prim Key</name><description>key of prim to deliver to</description><type class="prim"></type></param><param><name>Avatar key</name><description>Key of agent touching prim</description><type class="avatar"></type></param><param><name>Link Number</name><description>Link source of touch</description><type class="value"><valueType>integer</valueType></type></param><param><name>num_detected</name><description></description><type class="value"><valueType>integer</valueType></type></param></params></event-def></eventDescriptors></sim-meta-data>
