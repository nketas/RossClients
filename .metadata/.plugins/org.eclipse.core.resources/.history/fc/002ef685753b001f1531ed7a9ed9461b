package rossProxy;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;

public class RossIPListenerClientThread extends Thread {

		MulticastSocket socket; 
		InetAddress address; 
		DatagramPacket packet;
		public RossIPListenerClientThread()
		{
			try
			{
				
				address =  InetAddress.getByName("230.0.0.1");
			
				
			}
			catch(IOException e)
			{
				e.printStackTrace();
			}
		}

    
		public void run()
		{
			
			// get a few quotes
			for (int i = 0; i > -5; i++) {
				try {
				socket =  new MulticastSocket(4446);
				socket.joinGroup(address);
				byte[] buf = new byte[256];
				packet = new DatagramPacket(buf, buf.length);
				
					socket.receive(packet);


					String received = new String(packet.getData(), 0, packet.getLength());
					InetAddress RossDeviceIP = InetAddress.getByAddress(packet.getData());
					RossQueryClient rqc = new RossQueryClient(RossDeviceIP);
					rqc.start();
					System.out.println("Quote of the Moment: " + received);


					socket.leaveGroup(address);
					socket.close();
				}
				catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			
		
	}
}


